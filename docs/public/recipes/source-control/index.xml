<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Source Control on Presidium</title>
    <link>/recipes/source-control/</link>
    <description>Recent content in Source Control on Presidium</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>SPAN Digital</copyright><atom:link href="/recipes/source-control/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Approaches</title>
      <link>/recipes/source-control/approaches/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/recipes/source-control/approaches/</guid>
      <description>Presidium content can be managed in various ways depending on your project needs. Content may be hosted in:
 A dedicated repo that only contains documentation A sub-folder of an existing repo  A dedicated repo is simpler to configure and easier to manage independently. Managing content within in a sub directory inside the source code repo keeps everything in one place and makes it easier to update the documents while changing the code.</description>
    </item>
    
    <item>
      <title>Sub Folder</title>
      <link>/source-control/sub-folder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/source-control/sub-folder/</guid>
      <description>Presidium can exist within a sub-folder of an existing source code repository, for example, /docs.
Getting Presidium The easiest way to incorporate Presidium into your project is to run the wizard from your project root:
presidium init And specify Project Name as docs, so that, Presidium creates and empty Presidium site under docs/ folder.
The contents of your docs/ folder should look something like this:
config.yaml go.mod content/ static Add the following to your project’s .</description>
    </item>
    
    <item>
      <title>Sub Module</title>
      <link>/recipes/source-control/sub-module/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/recipes/source-control/sub-module/</guid>
      <description>If you want to store your documentation in a separate repository or share documentation between projects you can use submodules. Use the following steps to set up a submodule.
 Create a new repository for you module. Create a config.yml file and add the following module:mounts:- source:contenttarget:content Create a content directory and add your markdown files. E.g. ├── config.yml └── content └── glossary ├── _index.md └── link.md  Commit and push your changes To use your submodule, add it to the imports section of your project&amp;rsquo;s config.</description>
    </item>
    
  </channel>
</rss>
