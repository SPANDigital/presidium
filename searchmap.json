[{"author":"None","category":"The Big Picture","content":"Presidium is an open-source, static website generator built on Hugo for creating and maintaining software documentation for Agile teams and their users. Being static simplifies publication - you don’t need to provision a server and can host your documentation in a matter of seconds on Github Pages. You can easily include documentation publication in your continuous integration pipeline.\nPresidium gives Agile teams a way to evangelize, explain, and support solutions to their peers so they can be correctly used and successfully adopted. Wikis can be unstructured and lose their value, tribal knowledge and content stored on Slack channels or emails can go into a black hole. Engineers are experts at writing code, not documentation. Software documentation that doesn’t suck is not just a tagline.\nPresidium is based on sound theoretical strategies for developing learning content and managing knowledge assets. The core of this approach is the development of specific focused micro-articles that explain individual concepts. Predefined article templates and a menu structure get you up and running quickly.\nIn addition to the template for software documentation, Presidium includes templates for:\nOn-boarding Design systems Presidium supports:\nAutomatic Menus: The left navigation menu is dynamically created every time you publish your site. Theming: Easily select supported themes Role Filtering: Define user roles and filter site content by a specific selected role. Article Status Tracking: Track the status of an article and manage simple authoring workflows. Link Validation: Make sure your links actually go somewhere! Presidium was created by SPAN Digital and is licensed under Apache 2.0\n","id":"overview/overview.md","originalContent":"\nPresidium is an open-source, static website generator built on Hugo for creating and maintaining software \ndocumentation for Agile teams and their users. Being static simplifies publication - you don’t need to provision \na server and can host your documentation in a matter of seconds on Github Pages.\nYou can easily include documentation publication in your continuous integration pipeline.\n\nPresidium gives Agile teams a way to evangelize, explain, and support solutions to their peers so they can be \ncorrectly used and successfully adopted. Wikis can be unstructured and lose their value, tribal knowledge and \ncontent stored on Slack channels or emails can go into a black hole. Engineers are experts at writing code, not \ndocumentation. *Software documentation that doesn’t suck* is not just a tagline.\n\nPresidium is based on sound theoretical strategies for developing learning content and managing knowledge assets. \nThe core of this approach is the development of specific focused micro-articles that explain individual concepts. \nPredefined article templates and a menu structure get you up and running quickly.\n\nIn addition to the template for software documentation, Presidium includes templates for:\n\n- On-boarding\n- Design systems\n\nPresidium supports:\n\n- [Automatic Menus]({{\u003c ref \"key-concepts/#menu-structure\" \u003e}}): The left navigation menu is dynamically created every time you publish your site.\n- [Theming]({{\u003c ref \"reference/#themes\" \u003e}}): Easily select supported themes\n- [Role Filtering]({{\u003c ref \"reference/front-matter/#user-roles\" \u003e}}): Define user roles and filter site content by a specific selected role.\n- [Article Status Tracking]({{\u003c ref \"reference/front-matter/#statuses\" \u003e}}): Track the status of an article and manage simple authoring workflows.\n- [Link Validation]({{\u003c ref \"tools/#link-validation\" \u003e}}): Make sure your links actually go somewhere!\n\u003c!-- - [Versioning: Support] for multiple documentation versions. You can easily switch between versions without losing context. // TODO insert correct link to versionin article --\u003e\n\nPresidium was created by [SPAN Digital](http://www.spandigital.com/) and is licensed under [Apache 2.0](https://github.com/SPANDigital/presidium/blob/develop/LICENSE)\n","roles":["All Roles"],"scope":[],"section":"Overview","slug":"the-big-picture","title":"The Big Picture","updated":"2022-06-15T19:20:13.867157765Z","url":"/overview/#the-big-picture"},{"author":"None","category":"Presidium's Learning Model","content":"Presidium is more than a framework for producing documentation. It asks you to think about, structure, author, and publish content based on sensible best practices so you can write effective documentation, rather than producing documentation for documentation’s sake.\nSupporting Learning Objectives \u0026amp; Efficiency Presidium recommends creating small micro-articles that convey enough information to fulfill a learning objective. Small articles are advantageous because they:\nUsually only require a single author Force the author to focus on effectively describing a single concept Enable authors to quickly add documentation while also working on a product or service. Using this method, creating high quality content is part of the engineering process, not a deferred or protracted task.\nCategorization Often, either only a few people hold all the critical business and technical knowledge or information is spread across documents without organization or cohesion. Presidium suggests a way to categorize information that helps the writer compartmentalize and categorize knowledge, leading to more cohesive and logical documentation.\nOverview \u0026amp; Key Concepts Almost any knowledge base requires an overview to orient the reader in the correct domain. The Overview section should support and lead to a discussion of key concepts that prime the reader to use the rest of the content. These two sections are naturally presented first, and one should follow the another.\nPrerequisites \u0026amp; Getting Started For software projects, APIs, and similar documentation, most readers will require some initial preparation. This may include installing libraries or binaries and reading information before proceeding.\nThe Prerequisites section should support the information in Getting Started. The Getting Started section should be a quick deep-dive than enables a user to get from nowhere to running in minutes.\nBest Practices The Best Practices section should contain the ideal path to follow to get the most out of your product or service and reduce the potential of encountering problems. They can be a combination of anecdotal knowledge, RFCs, white papers etc.\nReference References should enhance or support the information in other sections (for example, imported API documentation, deep-dives beyond the needs of most readers, etc.)\nRecipes Recipes are clear sets of steps that explain how to do something useful or unusual with your product or service.\nGlossary Glossary entries are bite-sized pieces of information that explain a concept, resolve jargon, or list synonyms for a particular term. Because all content in the Glossary can be used for automatic tooltip generation, a good rule of thumb is to make sure a glossary entry can be condensed into a tooltip without being verbose or introducing confusion.\nMore Tools, Uses Cases, Updates, and Support are other sections you can use. You can also define your own sections in Presidium.\n","id":"key-concepts/presidium-learning-model.md","originalContent":"\nPresidium is more than a framework for producing documentation. It asks you to think about, structure, author, and\npublish content based on sensible best practices so you can write effective documentation, rather than producing \ndocumentation for documentation’s sake.\n\n## Supporting Learning Objectives \u0026 Efficiency\n\nPresidium recommends creating small micro-articles that convey enough information to fulfill a learning objective. \nSmall articles are advantageous because they:\n\n- Usually only require a single author\n- Force the author to focus on effectively describing a single concept\n- Enable authors to quickly add documentation while also working on a product or service.\n\nUsing this method, creating high quality content is part of the engineering process, not a deferred or protracted task.\n\n## Categorization\n\nOften, either only a few people hold all the critical business and technical knowledge or information is spread across \ndocuments without organization or cohesion. Presidium suggests a way to categorize information that helps the writer \ncompartmentalize and categorize knowledge, leading to more cohesive and logical documentation.\n\n### Overview \u0026 Key Concepts\n\nAlmost any knowledge base requires an overview to orient the reader in the correct domain. The Overview section should \nsupport and lead to a discussion of key concepts that **prime** the reader to use the rest of the content. \nThese two sections are naturally presented first, and one should follow the another.\n\n### Prerequisites \u0026 Getting Started\n\nFor software projects, APIs, and similar documentation, most readers will require some initial preparation. \nThis may include installing libraries or binaries and reading information before proceeding.\n\nThe Prerequisites section should support the information in Getting Started. The Getting Started section should be a \nquick deep-dive than enables a user to get from nowhere to running in minutes.\n\n### Best Practices\n\nThe Best Practices section should contain the ideal path to follow to get the most out of your product or service and \nreduce the potential of encountering problems. They can be a combination of anecdotal knowledge, RFCs, white papers etc.\n\n### Reference\n\nReferences should enhance or support the information in other sections (for example, imported API documentation, \ndeep-dives beyond the needs of most readers, etc.)\n\n### Recipes\n\nRecipes are clear sets of steps that explain how to do something useful or unusual with your product or service.\n\n### Glossary\n\nGlossary entries are bite-sized pieces of information that explain a concept, resolve jargon, or list synonyms for a \nparticular term. Because all content in the Glossary can be used for automatic tooltip generation, a good rule of thumb \nis to make sure a glossary entry can be condensed into a tooltip without being verbose or introducing confusion.\n\n### More\n\nTools, Uses Cases, Updates, and Support are other sections you can use. You can also define your own sections in Presidium.\n","roles":["All Roles"],"scope":[],"section":"Key Concepts","slug":"presidiums-learning-model","title":"Presidium's Learning Model","updated":"2022-06-15T19:20:13.867157765Z","url":"/key-concepts/#presidiums-learning-model"},{"author":"None","category":"Menu Structure","content":"Structure For simplicity and transparency, the menu structure and associated directory structure are the same.\nBehavior A significant feature of the menu is its tree structure: each section or subsection is a node and content traverses from each node through its children. In Presidium, the node name or title becomes the main header of the page. Everything outside of that sub-tree is not presented on the page. In this example, the user has clicked Content Structure. Everything under that section is displayed:\nNote the URL: /recipes/content-structure/. When you click on a section or subsection title, the url is included in the path. If you click on an article in a subsection (for example, Article Concatenation), the URL changes to /recipes/content-structure/#article-concatenation.\n","id":"key-concepts/menu-structure.md","originalContent":"\n### Structure\n\nFor simplicity and transparency, the menu structure and associated directory structure are the same.\n\n### Behavior\n\nA significant feature of the menu is its tree structure: **each section or subsection is a node** and content traverses from\neach node through its children. In Presidium, the node `name` or title becomes the main header of the page. \nEverything outside of that sub-tree is not presented on the page. In this example, the user has clicked Content \nStructure. Everything under that section is displayed:\n\n![Content Structure](/images/content_structure.png)\n\nNote the URL: `/recipes/content-structure/`. When you click on a section or subsection title, the url is included in \nthe path. If you click on an article in a subsection (for example, `Article Concatenation`), the URL changes to \n`/recipes/content-structure/#article-concatenation`.\n","roles":["All Roles"],"scope":[],"section":"Key Concepts","slug":"menu-structure","title":"Menu Structure","updated":"2022-06-15T19:20:13.867157765Z","url":"/key-concepts/#menu-structure"},{"author":"None","category":"Templates","content":"Presidium includes article templates for each of the pre-defined sections. Templates are text documents that contain instructions and Markdown which can be modified to meet your needs.\nTemplates encourage consistency and provide a simple checklist that an author can use for inspiration.\nDefault Template Design Template Onboarding Template ","id":"key-concepts/templates.md","originalContent":"\nPresidium includes article templates for each of the pre-defined sections. Templates are text documents that contain \ninstructions and Markdown which can be modified to meet your needs.\n\nTemplates encourage consistency and provide a simple checklist that an author can use for inspiration.\n\n- [Default Template](https://github.com/SPANDigital/presidium/tree/release/v2/templates/default)\n- [Design Template](https://github.com/SPANDigital/presidium/tree/release/v2/templates/design)\n- [Onboarding Template](https://github.com/SPANDigital/presidium/tree/release/v2/templates/onboarding)","roles":["All Roles"],"scope":[],"section":"Key Concepts","slug":"templates","title":"Templates","updated":"2022-06-15T19:20:13.867157765Z","url":"/key-concepts/#templates"},{"author":"None","category":"Authoring Workflow","content":"The following workflow is recommended for authoring content using Presidium.\nIdentify the Author Whether you’re creating a single article or an entire section, make sure to include the author tag in the front matter.\nWork Locally Presidium encourages you to write and review documentation on your local machine, rather than making changes directly on Github. The advantages to this workflow are:\nChanges are immediately viewable You can leverage Presidium’s validation tools Git commit history will have less noise Protect Master If you own the documentation project, make sure you prevent others from making commits or pushing to the Master branch. You will be publishing from the Master branch, so you want to maintain its integrity.\nWork On a Branch If you’re adding new content, start out on a branch based off of develop.\nReview Changes should be submitted as Pull Requests. Review all changes and merge into your Develop branch, then tag the release as a release for verification.\nTag, Release \u0026amp; Publish After you’ve finalized the new content, merge it into Master, tag it as a release, then publish to Github pages.\n","id":"key-concepts/authoring.md","originalContent":"\nThe following workflow is recommended for authoring content using Presidium.\n\n### Identify the Author\n\nWhether you’re creating a single article or an entire section, make sure to include the author tag in the front matter.\n\n### Work Locally\n\nPresidium encourages you to write and review documentation on your local machine, rather than making changes directly \non Github. The advantages to this workflow are:\n\n- Changes are immediately viewable\n- You can leverage Presidium’s validation tools\n- Git commit history will have less noise\n\n### Protect Master\n\nIf you own the documentation project, make sure you prevent others from making commits or pushing to the Master branch. \nYou will be publishing from the Master branch, so you want to maintain its integrity.\n\n### Work On a Branch\n\nIf you’re adding new content, start out on a branch based off of `develop`.\n\n### Review\n\nChanges should be submitted as Pull Requests. Review all changes and merge into your Develop branch, then tag the \nrelease as a release for verification.\n\n### Tag, Release \u0026 Publish\n\nAfter you’ve finalized the new content, merge it into Master, tag it as a release, then publish to Github pages.\n","roles":["All Roles"],"scope":[],"section":"Key Concepts","slug":"authoring-workflow","title":"Authoring Workflow","updated":"2022-06-15T19:20:13.867157765Z","url":"/key-concepts/#authoring-workflow"},{"author":"None","category":"Learning Objectives","content":"You should define the knowledge and skill set of your target audience before starting your documentation. You can then use this information to avoid wasting time explaining information your audience already knows.\nJust as stories are used to define software, learning objectives can be written using a standard template: As a [user] of the [solution] I [know a specific piece of information] or can [perform a specific task]\nFor each learning objective, you should:\nIdentify what your audience should know and be able to do after they have read the documentation. Use that information to create a list of learning objectives. ","id":"key-concepts/learning-objectives.md","originalContent":"\nYou should define the knowledge and skill set of your target audience before starting your documentation. \nYou can then use this information to avoid wasting time explaining information your audience already knows.\n\nJust as stories are used to define software, learning objectives can be written using a standard template: \n*As a [user] of the [solution] I [know a specific piece of information] or can [perform a specific task]*\n\nFor each learning objective, you should:\n\n- Identify what your audience should know and be able to do after they have read the documentation.\n- Use that information to create a list of learning objectives.\n","roles":["All Roles"],"scope":[],"section":"Key Concepts","slug":"learning-objectives","title":"Learning Objectives","updated":"2022-06-15T19:20:13.867157765Z","url":"/key-concepts/#learning-objectives"},{"author":"None","category":"Markdown","content":"Markdown is an ubiquitous, lighweight markup language known to almost any engineer. If you don’t know Markdown, it’s easy to learn. Presidium uses a version of Markdown known as Github Flavoured Markdown and leverages this ‘common tongue’ to enable multiple contributors to create documentation quickly without wasting time doing point \u0026amp; click styling or having to alter HTML and CSS.\nStyle Guides For any documentation project, a Markdown style guide ensures that contributors write documentation that is consistent with your intended tone and layout.\nFlexibility If you need more flexibility than Markdown offers, you can also use HTML separately or mixed with Markdown content in articles.\n","id":"key-concepts/markdown.md","originalContent":"\nMarkdown is an ubiquitous, lighweight markup language known to almost any engineer. If you don’t know Markdown, \nit’s easy to learn. Presidium uses a version of Markdown known as \n[Github Flavoured Markdown](https://guides.github.com/features/mastering-markdown/#GitHub-flavored-markdown) and \nleverages this ‘common tongue’ to enable multiple contributors to create documentation quickly without wasting time doing \n**point \u0026 click** styling or having to alter HTML and CSS.\n\n### Style Guides\n\nFor any documentation project, a Markdown style guide ensures that contributors write documentation that is consistent \nwith your intended tone and layout.\n\n### Flexibility\n\nIf you need more flexibility than Markdown offers, you can also use HTML separately or mixed with Markdown content in \narticles.\n","roles":["All Roles"],"scope":[],"section":"Key Concepts","slug":"markdown","title":"Markdown","updated":"2022-06-15T19:20:13.867157765Z","url":"/key-concepts/#markdown"},{"author":"None","category":"Micro-articles","content":"Presidium is built on sound theoretical strategies for developing learning content and managing knowledge assets. The core of this approach is the development of specific focused micro-articles that explain individual concepts.\nThis splits the problem of content development into two parts:\nDefining a site outline based on the concepts that must be documented and how they should be sequenced and presented.\nDeveloping articles that each explain each concept, using a standard template to ensure consistency. Micro-articles break the documentation development and maintenance activities into manageable chunks that can be prioritized based on need. In many cases, it’s possible to write and review an article in under 20 minutes. See Writing Effective Articles\nThis Presidium documentation site not only explains the Presidium software but also includes best practice guidelines for writing your documentation.\n","id":"key-concepts/micro-articles.md","originalContent":"\nPresidium is built on sound theoretical strategies for developing learning content and managing knowledge assets. \nThe core of this approach is the development of specific focused micro-articles that explain individual concepts.\n\nThis splits the problem of content development into two parts:\n\n1. Defining a site outline based on the concepts that must be documented and how they should be sequenced and presented.\n   \n2. Developing articles that each explain each concept, using a standard template to ensure consistency.\nMicro-articles break the documentation development and maintenance activities into manageable chunks that can be \nprioritized based on need. In many cases, it’s possible to write and review an article in under 20 minutes. \nSee [Writing Effective Articles]({{\u003cref \"best-practices/#writing-effective-articles\"\u003e}})\n   \nThis Presidium documentation site not only explains the Presidium software but also includes best practice guidelines \nfor writing your documentation.\n","roles":["All Roles"],"scope":[],"section":"Key Concepts","slug":"micro-articles","title":"Micro-articles","updated":"2022-06-15T19:20:13.867157765Z","url":"/key-concepts/#micro-articles"},{"author":"None","category":"Content Maintenance","content":"Presidium is designed to make it easy to write and maintain your documentation. Instead of a monolithic document, Presidium manages a directory structure of micro-articles. The directory structure maps to the sections of your site, while the articles are joined together to build the content of each section. You can create a directory to add new sections and sub-sections. Each section contains a sample article template you can use as a starting point when creating new content. This site explains other best practices for writing articles.\nIf you know how to maintain a codebase in a Github repository, you already know how to maintain Presidium documentation. You can use your team’s current Github workflow to manage the approval and publication process and use Github’s features to handle merge conflicts and other issues, just as you do for your source code. You can easily modify the suggested site structure and behavior. Most teams only need to remove a few sections that are not relevant to their project. Presidium has several configurable features that can be enabled as needed.\n","id":"key-concepts/content-maintenance.md","originalContent":"\nPresidium is designed to make it easy to write and maintain your documentation. Instead of a monolithic document, \nPresidium manages a directory structure of micro-articles. The directory structure maps to the sections of your site, \nwhile the articles are joined together to build the content of each section. You can create a directory to add new \nsections and sub-sections. Each section contains a sample article template you can use as a starting point when creating\nnew content. This site explains other best practices for writing articles.\n\nIf you know how to maintain a codebase in a Github repository, you already know how to maintain Presidium documentation.\nYou can use your team’s current Github workflow to manage the approval and publication process and use Github’s features\nto handle merge conflicts and other issues, just as you do for your source code. You can easily modify the suggested \nsite structure and behavior. Most teams only need to remove a few sections that are not relevant to their project. \nPresidium has several configurable features that can be enabled as needed.\n","roles":["All Roles"],"scope":[],"section":"Key Concepts","slug":"content-maintenance","title":"Content Maintenance","updated":"2022-06-15T19:20:13.867157765Z","url":"/key-concepts/#content-maintenance"},{"author":"None","category":"Prerequisites","content":"The following tools are required to use Presidium:\nInstall Homebrew\n/bin/bash -c \u0026#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\u0026#34; Add the Presidium Tap\nbrew tap SPANDigital/homebrew-tap git@github.com:SPANDigital/homebrew-tap.git Install Presidium\nbrew install presidium ","id":"prerequisites/prerequisites.md","originalContent":"\nThe following tools are required to use Presidium:\n\n1. Install Homebrew\n\n    ```\n    /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n    ```\n\n1. Add the Presidium Tap\n\n    ```\n    brew tap SPANDigital/homebrew-tap git@github.com:SPANDigital/homebrew-tap.git\n    ```\n\n1. Install Presidium\n   \n   ```\n   brew install presidium\n   ```\n","roles":["All Roles"],"scope":[],"section":"Prerequisites","slug":"prerequisites","title":"Prerequisites","updated":"2022-06-15T19:20:13.867157765Z","url":"/prerequisites/#prerequisites"},{"author":"None","category":"Install Presidium","content":"Tap SPAN\u0026rsquo;s repository\nbrew tap SPANDigital/homebrew-tap git@github.com:SPANDigital/homebrew-tap.git Install using brew\nbrew install presidium ","id":"getting-started/install-presidium.md","originalContent":"\nTap SPAN's repository\n\n   ```\n   brew tap SPANDigital/homebrew-tap git@github.com:SPANDigital/homebrew-tap.git\n   ```\n\nInstall using brew\n\n   ```\n   brew install presidium\n   ```\n","roles":["All Roles"],"scope":[],"section":"Getting Started","slug":"install-presidium","title":"Install Presidium","updated":"2022-06-15T19:20:13.867157765Z","url":"/getting-started/#install-presidium"},{"author":"None","category":"Run Presidium","content":"Start the wizard to create a new Presidium Site:\npresidium init Follow the wizard instructions:\nProject Name: The name of the folder that contains your Presidium Site Title: The title for your Presidium Site Template: The template to use. Templates provide different starting sites based on your needs. Theme: The theme to use. Themes provide different look and feel for your Presidium Site Then, navigate to the newly created folder (with your project name) and start a local server:\npresidium hugo serve ","id":"getting-started/run-presidium.md","originalContent":"\nStart the wizard to create a new Presidium Site:\n\n```\npresidium init\n```\n\nFollow the wizard instructions:\n\n- **Project Name**: The name of the folder that contains your Presidium Site\n- **Title**: The title for your Presidium Site\n- **Template**: The template to use. Templates provide different starting sites based on your needs.\n- **Theme**: The theme to use. Themes provide different look and feel for your Presidium Site\n\nThen, navigate to the newly created folder (with your project name) and start a local server:\n\n```\npresidium hugo serve\n```\n\n\n","roles":["All Roles"],"scope":[],"section":"Getting Started","slug":"run-presidium","title":"Run Presidium","updated":"2022-06-15T19:20:13.867157765Z","url":"/getting-started/#run-presidium"},{"author":"None","category":"Update Content","content":"You can make changes to the following files and folders:\ncontent/ Content folder for all your articles config.yaml Site configuration properties static/ Static folder for all your resources (images, etc.) All changes can be made without having to restart the local server\n","id":"getting-started/update-content.md","originalContent":"\nYou can make changes to the following files and folders:\n\n- `content/` Content folder for all your articles\n- `config.yaml` Site configuration properties\n- `static/` Static folder for all your resources (images, etc.)\n\nAll changes can be made without having to restart the local server\n\n\n","roles":["All Roles"],"scope":[],"section":"Getting Started","slug":"update-content","title":"Update Content","updated":"2022-06-15T19:20:13.867157765Z","url":"/getting-started/#update-content"},{"author":"None","category":"Plan Content Development","content":"Before you write any content, spend some time anticipating what tasks you need to perform and make sure you have the time and resources to achieve your goals.\nThe following steps work for both small and large projects:\nDesign the site structure Inventory existing content Plan the conversion of existing content into articles Map the planned articles to your structure Identify required new articles Repurpose existing content into articles Write new articles Proofread and edit Publish Discussion The most important planning task is identifying the scope of your documentation efforts and understanding the needs of your audience.\nPresidium is pre-configured with a set of standard sections that are commonly used in software documentation. You can use this framework when starting to scope your project.\n","id":"best-practices/plan-content-development.md","originalContent":"\nBefore you write any content, spend some time anticipating what tasks you need to perform and make sure you have the \ntime and resources to achieve your goals.\n\nThe following steps work for both small and large projects:\n\n1. Design the site structure\n1. Inventory existing content\n1. Plan the conversion of existing content into articles\n1. Map the planned articles to your structure\n1. Identify required new articles\n1. Repurpose existing content into articles\n1. Write new articles\n1. Proofread and edit\n1. Publish\n\n## Discussion\n\nThe most important planning task is identifying the scope of your documentation efforts and understanding the needs \nof your audience.\n\nPresidium is pre-configured with a set of standard sections that are commonly used in software documentation. \nYou can use this framework when starting to scope your project.\n","roles":["All Roles"],"scope":[],"section":"Best Practices","slug":"plan-content-development","title":"Plan Content Development","updated":"2022-06-15T19:20:13.867157765Z","url":"/best-practices/#plan-content-development"},{"author":"None","category":"Design Documentation Structure","content":"Before starting to write content, you should define the documentation structure to answer questions such as:\nHow many sections do I need? What should each section cover? Do some sections need sub-sections? Answering these and other questions will help you scope the project and define the content that needs to be found or written.\nKeep in mind that although you should decide on the structure of your site at the beginning, you might need to make changes as you gain a deeper understanding of the content. With Presidium, it’s easy to change the structure by moving articles.\nThe Presidium templates are pre-configured with a standard menu structure that you can use to start scoping your documentation. You can add new sections but in most cases, the standard sections will suffice.\nThe following table shows the pre-configured sections in the software documentation template:\nSection Description Overview A brief, business-level overview of the solution that includes the main benefits vs. alternative solution Key Concepts Introductory descriptions of the solution’s key concepts, components, and structures that include roles and responsibilities for the component. Prerequisites A summary of the required knowledge, skills, and software to successfully use the solution. Best Practices The recommended approach for using the solution. Reference Information on the technical content of the site. APIs, data structures, etc. Reference material should also include detailed descriptions of how to use each part of the solution, arranged by conceptual area. Recipes A solution for a specific problem or a way to achieve a specific objective. Recipes are used to show a user how to do something. Glossary A list of definitions for terms that have specific meanings in the solution documentation. Use Cases Descriptions of how the solution’s components work together to enable commonly implemented scenarios. Use cases should include code examples. Tools A list of tools and services that can be used with the solution. Updates New releases, patches, or other announcements of interest to the user community. Discussion After you have identified the sections you want to use for your documentation, define and compile a list of the learning objectives for each section.\n","id":"best-practices/design-documentation-structure.md","originalContent":"\nBefore starting to write content, you should define the documentation structure to answer questions such as:\n\n- How many sections do I need?\n- What should each section cover?\n- Do some sections need sub-sections?\n\nAnswering these and other questions will help you scope the project and define the content that needs to be found or \nwritten.\n\nKeep in mind that although you should decide on the structure of your site at the beginning, you might need to make \nchanges as you gain a deeper understanding of the content. With Presidium, it’s easy to change the structure by moving \narticles.\n\nThe Presidium templates are pre-configured with a standard menu structure that you can use to start scoping your \ndocumentation. You can add new sections but in most cases, the standard sections will suffice.\n\nThe following table shows the pre-configured sections in the software documentation template:\n\n| Section | Description |\n|---------|-------------|\n|Overview | A brief, business-level overview of the solution that includes the main benefits vs. alternative solution |\n| Key Concepts | Introductory descriptions of the solution’s key concepts, components, and structures that include roles and responsibilities for the component. |\n| Prerequisites | A summary of the required knowledge, skills, and software to successfully use the solution. |\n| Best Practices | The recommended approach for using the solution. |\n| Reference\t| Information on the technical content of the site. APIs, data structures, etc. Reference material should also include detailed descriptions of how to use each part of the solution, arranged by conceptual area. |\n| Recipes | A solution for a specific problem or a way to achieve a specific objective. Recipes are used to show a user how to do something. |\n| Glossary | A list of definitions for terms that have specific meanings in the solution documentation. |\n| Use Cases\t| Descriptions of how the solution’s components work together to enable commonly implemented scenarios. Use cases should include code examples. |\n| Tools | A list of tools and services that can be used with the solution. |\n| Updates | New releases, patches, or other announcements of interest to the user community. |\n\n## Discussion\n\nAfter you have identified the sections you want to use for your documentation, define and compile a list of the learning\nobjectives for each section.\n","roles":["All Roles"],"scope":[],"section":"Best Practices","slug":"design-documentation-structure","title":"Design Documentation Structure","updated":"2022-06-15T19:20:13.867157765Z","url":"/best-practices/#design-documentation-structure"},{"author":"None","category":"Design Learning Objectives","content":"When defining learning objectives, think carefully about what it means to use your solution effectively by doing the following:\nIdentify what your audience should know and be able to do after they have read the documentation. Use that information to create a list of learning objectives. Just as stories are used to define software, learning objectives can be written using a standard template.\nAs a [user] of the [solution] I [know a specific piece of information] or can [perform a specific task] Often, existing stories can be converted into learning objectives with little or no alteration:\n- As a first time user of Presidium I can easily download, install, and run the latest version. - As a Presidium user, I know the value of defining learning objectives for developing comprehensive content. Clearly worded learning objectives enable you to focus the content on comprehensive and coherent goals. Learning objectives should be evident in the title and content of articles. Often, one learning objective corresponds to one content article.\nDiscussion Define the knowledge and skill set of your target audience before starting your documentation. Use this information to avoid wasting time explaining information your audience already knows.\n- As a user of Presidium I already know how to use Github as a version control system. - As a user of Presidium, I know what Markdown is, I have used it before, and I know how to look up details about Markdown syntax I may not know. ","id":"best-practices/define-learning-objectives.md","originalContent":"\nWhen defining learning objectives, think carefully about what it means to use your solution effectively by doing the \nfollowing:\n\n1. Identify what your audience should know and be able to do after they have read the documentation.\n1. Use that information to create a list of learning objectives.\n\nJust as stories are used to define software, learning objectives can be written using a standard template.\n\n```\nAs a [user] of the [solution] I [know a specific piece of information] or can [perform a specific task]\n```\n\nOften, existing stories can be converted into learning objectives with little or no alteration:\n\n```\n- As a first time user of Presidium I can easily download, install, and run the latest version.\n- As a Presidium user, I know the value of defining learning objectives for developing comprehensive content.\n```\n\nClearly worded learning objectives enable you to focus the content on comprehensive and coherent goals. Learning \nobjectives should be evident in the title and content of articles. Often, one learning objective corresponds to one \ncontent article.\n\n## Discussion\n\nDefine the knowledge and skill set of your target audience before starting your documentation. Use this information to \navoid wasting time explaining information your audience already knows.\n\n```\n- As a user of Presidium I already know how to use Github as a version control system.\n- As a user of Presidium, I know what Markdown is, I have used it before, and I know how to look up details about \nMarkdown syntax I may not know.\n```\n","roles":["All Roles"],"scope":[],"section":"Best Practices","slug":"design-learning-objectives","title":"Design Learning Objectives","updated":"2022-06-15T19:20:13.867157765Z","url":"/best-practices/#design-learning-objectives"},{"author":"None","category":"Inventory Existing Content","content":"When starting a new documentation project, you should first review and evaluate existing content. Content from multiple sources, such as those listed below, can be repurposed:\nExisting software documentation Wikis and message boards Design documents Work tickets (epics and stories, bugs) API specifications README files Code comments and markup Help files Emails Meeting notes Project planning materials Before starting:\nCompile a list of existing content sources. Identify how each item could be decomposed or converted into an article. Identify where these articles can fit in your documentation structure. Discussion If there is no existing documentation set, some areas will be well documented, while others will either be poorly defined or missing. Expect to find duplicate and outdated content. Maintain a list of the best documentation you find for any learning objective.\n","id":"best-practices/inventory-existing-content.md","originalContent":"\nWhen starting a new documentation project, you should first review and evaluate existing content. Content from multiple \nsources, such as those listed below, can be repurposed:\n\n- Existing software documentation\n- Wikis and message boards\n- Design documents\n- Work tickets (epics and stories, bugs)\n- API specifications\n- README files\n- Code comments and markup\n- Help files\n- Emails\n- Meeting notes\n- Project planning materials\n\nBefore starting:\n\n1. Compile a list of existing content sources.\n1. Identify how each item could be decomposed or converted into an article.\n1. Identify where these articles can fit in your documentation structure.\n\n## Discussion\n\nIf there is no existing documentation set, some areas will be well documented, while others will either be poorly \ndefined or missing. Expect to find duplicate and outdated content. Maintain a list of the best documentation you find \nfor any learning objective.\n","roles":["All Roles"],"scope":[],"section":"Best Practices","slug":"inventory-existing-content","title":"Inventory Existing Content","updated":"2022-06-15T19:20:13.867157765Z","url":"/best-practices/#inventory-existing-content"},{"author":"virtualtraveler","category":"Use Article Templates","content":"Presidium includes article templates for each of the pre-defined sections. Templates are text documents that contain instructions and Markdown which can be modified to meet your needs.\nFor example, here is the template for the Best Practices section:\n```# Template Instructions # --------------------- # 1) Replace any content placeholders with the appropriate content. Search for \u0026quot;REPLACE WITH\u0026quot;. # 2) Delete this line and all lines above so that the front matter below is at the top of the file. --- title: REPLACE WITH Best Practice Title author: REPLACE WITH repository username --- REPLACE WITH a summary paragraph of the recommended practice. ```python REPLACE WITH A code snippet, if required, that illustrates the recommended practice. Change the name of the language if needed. DELETE the entire section if not required. ``` # Discussion REPLACE WITH a discussion of the recommended practice. Add subheadings, code snippets and tables as required. # See Also * [REPLACE WITH a link description](http://www.example.com) Discussion Templates encourage consistency and provide a simple checklist that an author can use for inspiration.\n","id":"best-practices/use-article-templates.md","originalContent":"\nPresidium includes article templates for each of the pre-defined sections. Templates are text documents that contain instructions and Markdown which can be modified to meet your needs.\n\nFor example, here is the template for the Best Practices section:\n\n    ```# Template Instructions\n    # ---------------------   \n    # 1) Replace any content placeholders with the appropriate content. Search for \"REPLACE WITH\".\n    # 2) Delete this line and all lines above so that the front matter below is at the top of the file.\n    ---\n    title: REPLACE WITH Best Practice Title\n    author: REPLACE WITH repository username\n    ---\n\n    REPLACE WITH a summary paragraph of the recommended practice.\n\n    ```python\n        REPLACE WITH A code snippet, if required, that illustrates the recommended practice. Change the name of the language if needed. DELETE the entire section if not required.\n    ```\n\n    # Discussion\n\n    REPLACE WITH a discussion of the recommended practice. Add subheadings, code snippets and tables as required.\n\n    # See Also\n\n    * [REPLACE WITH a link description](http://www.example.com)\n\n\n# Discussion\n\nTemplates encourage consistency and provide a simple checklist that an author can use for inspiration.\n","roles":["All Roles"],"scope":[],"section":"Best Practices","slug":"use-article-templates","title":"Use Article Templates","updated":"2022-06-15T19:20:13.867157765Z","url":"/best-practices/#use-article-templates"},{"author":"virtualtraveler","category":"Writing Effective Articles","content":"Anyone can write great articles if they follow a few simple style guidelines:\nMake sure the title explains what the article is about. The title will be used to construct the navigation menu and will often be separated from the article body along side other article titles. Make sure the title works on its own and describes the essence of the article. Keep titles simple and succinct without using humor or colloquialisms. Have one author for every article. This enable authors to quickly add documentation while also working on a product or service. Discussion Articles should convey enough information to fulfill a learning objective.\n","id":"best-practices/write-effective-articles.md","originalContent":"\nAnyone can write great articles if they follow a few simple style guidelines:\n\n* Make sure the title explains what the article is about. The title will be used to construct the navigation menu and will often be separated from the article body along side other article titles.\n* Make sure the title works on its own and describes the essence of the article.\n* Keep titles simple and succinct without using humor or colloquialisms.  \n* Have one author for every article. This enable authors to quickly add documentation while also working on a product or service.\n\n# Discussion\n\nArticles should convey enough information to fulfill a learning objective.\n","roles":["All Roles"],"scope":[],"section":"Best Practices","slug":"writing-effective-articles","title":"Writing Effective Articles","updated":"2022-06-15T19:20:13.867157765Z","url":"/best-practices/#writing-effective-articles"},{"author":"None","category":"Configuration","content":"This is a sample Presidium configuration file:\nlanguageCode: en-us title: \u0026#34;Sample Title\u0026#34; copyright: Template Footer pluralizelisttitles: false markup: goldmark: renderer: Unsafe: true parser: attribute: block: true highlight: style: github menu: Main: - identifier: organization-overview name: Organization Overview url: / weight: 1 - identifier: solution-overview name: Solution Overview url: /solution-overview/ weight: 2 - identifier: technology-stack name: Technology Stack url: /technology-stack/ weight: 3 - identifier: tool-chain name: Tool Chain url: /tool-chain/ weight: 4 - identifier: dev-environment-setup name: Dev Environment Setup url: /dev-environment-setup/ weight: 5 - identifier: getting-started name: Getting Started url: /getting-started/ weight: 6 - identifier: reference name: Reference url: /reference/ weight: 7 - identifier: updates name: Updates url: /updates/ weight: 8 outputFormats: MenuIndex: baseName: menu mediaType: application/json SearchMap: baseName: searchmap mediaType: application/json outputs: home: - HTML - RSS - MenuIndex - SearchMap module: imports: - path: github.com/spandigital/presidium-theme-website enableInlineShortcodes: true frontmatter: lastmod: - lastmod - :fileModTime - :default ","id":"reference/configuration.md","originalContent":"\nThis is a sample Presidium configuration file:\n\n```yaml\nlanguageCode: en-us\ntitle: \"Sample Title\"\ncopyright: Template Footer\npluralizelisttitles: false\nmarkup:\n  goldmark:\n    renderer:\n      Unsafe: true\n    parser:\n      attribute:\n        block: true\n  highlight:\n    style: github\nmenu:\n  Main:\n  - identifier: organization-overview\n    name: Organization Overview\n    url: /\n    weight: 1\n  - identifier: solution-overview\n    name: Solution Overview\n    url: /solution-overview/\n    weight: 2\n  - identifier: technology-stack\n    name: Technology Stack\n    url: /technology-stack/\n    weight: 3\n  - identifier: tool-chain\n    name: Tool Chain\n    url: /tool-chain/\n    weight: 4\n  - identifier: dev-environment-setup\n    name: Dev Environment Setup\n    url: /dev-environment-setup/\n    weight: 5\n  - identifier: getting-started\n    name: Getting Started\n    url: /getting-started/\n    weight: 6\n  - identifier: reference\n    name: Reference\n    url: /reference/\n    weight: 7\n  - identifier: updates\n    name: Updates\n    url: /updates/\n    weight: 8\noutputFormats:\n  MenuIndex:\n    baseName: menu\n    mediaType: application/json\n  SearchMap:\n    baseName: searchmap\n    mediaType: application/json\noutputs:\n  home:\n  - HTML\n  - RSS\n  - MenuIndex\n  - SearchMap\nmodule:\n  imports:\n  - path: github.com/spandigital/presidium-theme-website\nenableInlineShortcodes: true\nfrontmatter:\n  lastmod:\n  - lastmod\n  - :fileModTime\n  - :default\n\n```","roles":["All Roles"],"scope":[],"section":"Reference","slug":"configuration","title":"Configuration","updated":"2022-06-15T19:20:13.867157765Z","url":"/reference/#configuration"},{"author":"None","category":"Themes","content":"Presidium provides some themes when spinning up your Presidium Site through the command line. You will see something like this when running presidium init:\nSelect a theme ✔ Presidium Theme - (Presidium\u0026#39;s default theme) If you already have a presidium site, you can enable your theme by adding a module in the configuration file:\nmodule: imports: - path: \u0026lt;Your theme\u0026gt; Logo The default Presidium logo image is placed and loaded from the pre-configured template.\nTo update the site\u0026rsquo;s logo place the logo image into the static/images folder and update the site\u0026rsquo;s config logo variable as seen below logo: [path to logo]\nIdeally the logo should have the following specifications 260px × 124px and can be of type: png, jpg or svg\nFavicon The default Presidium favicon image is placed and loaded from the pre-configured template.\nTo update the site\u0026rsquo;s favicon place the favicon image into the static/images folder and update the site\u0026rsquo;s config favIcon variable as seen below favIcon: [path to favicon]\nIdeally the favIcon can be of type: png, jpg or svg, ico.\nTitle tag The browser \u0026lt;title\u0026gt; tag is populated with the title provided when spinning up your Presidium Site throught the command line. You can modify it by changing the title key in the configuration file.\n","id":"reference/themes.md","originalContent":"\nPresidium provides some themes when spinning up your Presidium Site through the command line. You will see something\nlike this when running `presidium init`:\n\n```\nSelect a theme\n  ✔ Presidium Theme - (Presidium's default theme)\n```\n\nIf you already have a presidium site, you can enable your theme by adding a module in the configuration file:\n\n```\nmodule:\n  imports:\n    - path: \u003cYour theme\u003e\n```\n\n## Logo\n\nThe default Presidium logo image is placed and loaded from the pre-configured template. \n\nTo update the site's logo place the logo image into the static/images folder and update the site's ```config ``` logo variable as seen below\n```logo: [path to logo]```\n\nIdeally the logo should have the following specifications `260px × 124px` and can be of type: png, jpg or svg\n\n## Favicon\n\nThe default Presidium favicon image is placed and \nloaded from the pre-configured template. \n\nTo update the site's favicon place the favicon image into the static/images folder and update the site's ```config ``` favIcon variable as seen below\n```favIcon: [path to favicon]```\n\nIdeally the favIcon can be of type: png, jpg or svg, ico.\n\n## Title tag\n\nThe browser `\u003ctitle\u003e` tag is populated with the `title` provided when spinning up your Presidium Site throught the\ncommand line. You can modify it by changing the `title` key in the configuration file.\n","roles":["All Roles"],"scope":[],"section":"Reference","slug":"themes","title":"Themes","updated":"2022-06-15T19:20:13.871157946Z","url":"/reference/#themes"},{"author":"None","category":"Directories","content":"Articles are stored in the content directory. Associated resources, such as images, are stored in the media directory. The config.yaml file is used to configure the project.\nDirectory Description ./config.yaml General options to configure the project ./content Articles ./static Various resources for the project (images, imported content, etc.) All content changes are monitored; any change triggers a regeneration of the site.\n","id":"reference/directories.md","originalContent":"\nArticles are stored in the content directory. Associated resources, such as images, are stored in the media directory.\nThe `config.yaml` file is used to configure the project.\n\n| **Directory** | **Description** |\n|---------------|-----------------|\n| `./config.yaml` | General options to configure the project |\n| `./content` | Articles |\n| `./static` | Various resources for the project (images, imported content, etc.) |\n\nAll content changes are monitored; any change triggers a regeneration of the site.\n","roles":["All Roles"],"scope":[],"section":"Reference","slug":"directories","title":"Directories","updated":"2022-06-15T19:20:13.867157765Z","url":"/reference/#directories"},{"author":"None","category":"Images","content":"Images Images used within the content should be placed in a static/images directory\n/static/images/ -- static/doc-workflow.png Logos and favicons Logos The Logo of the site appears above the Menu Navigation.\nLogos should be placed in the static/images directory.\nNote: If a brand module is used the instruction above does not apply. Ensure the brand module includes the static/images directory with the logo inside.\nThe menu bar Logo can be configured in the config file, under params:\nparams: logo: [path to logo] either locally or from the brand module Examples: logo: images/logo.png logo: images/logo.svg Favicons The favicon is the symbol that appears on the tab of the site, next to the title.\nFavicons should be placed in the static/images directory.\nNote: If a brand module is used the instruction above does not apply. Ensure the brand module includes the static/images directory with the favicon inside.\nThe menu bar Logo can be configured in the config file, under params:\nparams: favicon: [path to favicon] (either locally or from the brand module) Examples: favicon: images/favicon.svg favicon: images/favicon.ico ","id":"reference/images.md","originalContent":"\n ## Images \nImages used within the content should be placed in a static/images directory\n```\n/static/images/\n    -- static/doc-workflow.png\n```\n\n## Logos and favicons\n\n### Logos \n\nThe Logo of the site appears above the Menu Navigation. \n\nLogos should be placed in the ```static/images``` directory.\n\n**Note**: If a brand module is used the instruction above does not apply.  Ensure the brand module includes the static/images directory with the logo inside.\n\nThe menu bar Logo can be configured in the **config** file, under *params*: \n```\nparams:\n    logo: [path to logo] either locally or from the brand module\n\nExamples:\n\nlogo: images/logo.png  \nlogo: images/logo.svg\n```\n\n### Favicons\nThe favicon is the symbol that appears on the tab of the site, next to the title. \n\nFavicons should be placed in the ```static/images``` directory.\n\n**Note**: If a brand module is used the instruction above does not apply. Ensure the brand module includes the static/images directory with the favicon inside.\n\nThe menu bar Logo can be configured in the **config** file, under *params*: \n```\nparams: \n    favicon: [path to favicon] (either locally or from the brand module)\n\nExamples:\n\nfavicon: images/favicon.svg  \nfavicon: images/favicon.ico\n```\n","roles":["All Roles"],"scope":[],"section":"Reference","slug":"images","title":"Images","updated":"2022-06-15T19:20:13.867157765Z","url":"/reference/#images"},{"author":"None","category":"Front matter","content":"Front Matter serves two purposes:\nIndicates that the file should be included as an article in the build process Allows you to set properties for your article For example:\n--- title: Presidium slug: overview url: front-matter/overview weight: 1 authors: github-username roles: Developer status: Draft --- Presidium includes the following front matter variables:\nVariable Description title A string representing the article or subsection title or the title of the subsection. slug A string representing the slug for deep linking the article url A string representing the URL for the article weight A number to provide ordering of articles, a higher number means the article will appear later in the section author A string, generally the Github username of the main author of the article. github A string, representing the Github username of the main author of the article. roles A list of strings representing the appropriate roles for an article. status A string that indicates the status of the article (draft, complete, in progress, etc.) ","id":"reference/front-matter/overview.md","originalContent":"\nFront Matter serves two purposes:\n\n- Indicates that the file should be included as an article in the build process\n- Allows you to set properties for your article\n\nFor example:\n\n```md\n---\ntitle: Presidium\nslug: overview\nurl: front-matter/overview\nweight: 1\nauthors: github-username\nroles: Developer\nstatus: Draft\n---\n```\n\nPresidium includes the following front matter variables:\n\n| **Variable** | **Description** |\n|--------------|-----------------|\n| title | A string representing the article or subsection title or the title of the subsection. |\n| slug | A string representing the slug for deep linking the article |\n| url | A string representing the URL for the article |\n| weight | A number to provide ordering of articles, a higher number means the article will appear later in the section |\n| [author](#authors) | A string, generally the Github username of the main author of the article. |\n| github | A string, representing the Github username of the main author of the article. |\n| [roles](#user-roles) | A list of strings representing the appropriate roles for an article. |\n| [status](#statuses) | A string that indicates the status of the article (draft, complete, in progress, etc.) |\n","roles":["All Roles"],"scope":[],"section":"Reference","slug":"overview","title":"Overview","updated":"2022-06-15T19:20:13.867157765Z","url":"/reference/front-matter/#overview"},{"author":"None","category":"Front matter","content":"Every article can include an author in the front matter:\n--- author: {author name} --- Optional links to authors can be enabled by setting a base URL in the site config:\nparams: author: external: url: https://github.com/ newTab: false To customize the label for authors, provide a new label in the site config:\nparams: author: label: Custom Label To hide or show authors on your generated site, enable or disable the component in the site config:\nparams: show: author: true|false ","id":"reference/front-matter/authors.md","originalContent":"\nEvery article can include an author in the `front matter`:\n\n```\n---\nauthor: {author name}\n---\n```\n\nOptional links to authors can be enabled by setting a base URL in the `site config`:\n\n```\nparams:\n  author:\n    external:\n      url: https://github.com/\n      newTab: false\n```\n\nTo customize the label for authors, provide a new label in the `site config`:\n\n```\nparams:\n  author:\n    label: Custom Label\n```\n\nTo hide or show authors on your generated site, enable or disable the component in the `site config`:\n\n```\nparams:\n  show:\n    author: true|false\n```\n","roles":["All Roles"],"scope":[],"section":"Reference","slug":"authors","title":"Authors","updated":"2022-06-15T19:20:13.867157765Z","url":"/reference/front-matter/#authors"},{"author":"None","category":"Front matter","content":"Various roles can be added to a site to allow readers to filter articles and menu items by a target audience.\nThis optional feature can be enabled by defining user roles in the site config.\nparams: roles: label: \u0026#34;Show documentation for\u0026#34; all: \u0026#34;All Roles\u0026#34; options: - \u0026#34;Business Analyst\u0026#34; - \u0026#34;Developers\u0026#34; - \u0026#34;Testers\u0026#34; If a role is not specified, articles default to roles.all\nArticles can have one or more roles defined in front-matter:\n--- roles: [Developer, Business Analyst] --- --- roles: [Developer] --- To show or hide roles on articles in your generated site, use the following setting in the site config:\nparams: show: roles: true|false ","id":"reference/front-matter/user-roles.md","originalContent":"\nVarious roles can be added to a site to allow readers to filter articles and menu items by a target audience.\n\nThis optional feature can be enabled by defining user roles in the `site config`.\n\n```\nparams:\n  roles:\n    label: \"Show documentation for\"\n    all: \"All Roles\"\n    options:\n      - \"Business Analyst\"\n      - \"Developers\"\n      - \"Testers\"\n```\n\nIf a role is not specified, articles default to `roles.all`\n\nArticles can have one or more roles defined in `front-matter`:\n\n```\n---\nroles: [Developer, Business Analyst]\n---\n```\n\n```\n---\nroles: [Developer]\n---\n```\n\nTo show or hide roles on articles in your generated site, use the following setting in the `site config`:\n\n```\nparams:\n  show:\n    roles: true|false\n```\n","roles":["All Roles"],"scope":[],"section":"Reference","slug":"user-roles","title":"User Roles","updated":"2022-06-15T19:20:13.867157765Z","url":"/reference/front-matter/#user-roles"},{"author":"None","category":"Front matter","content":"Each article can be assigned a status to track its lifecycle:\ndraft review published retired Statuses can be set in the site’s front matter:\n--- status: draft|review|published|retired --- To show or hide statuses on your generated site, use the following setting in the site config:\nparams: show: status: true|false ","id":"reference/front-matter/statuses.md","originalContent":"\nEach article can be assigned a status to track its lifecycle:\n\n- draft\n- review\n- published\n- retired\n\nStatuses can be set in the site’s `front matter`:\n\n```\n---\nstatus: draft|review|published|retired\n---\n```\n\nTo show or hide statuses on your generated site, use the following setting in the `site config`:\n\n```\nparams:\n  show:\n    status: true|false\n```\n","roles":["All Roles"],"scope":[],"section":"Reference","slug":"statuses","title":"Statuses","updated":"2022-06-15T19:20:13.867157765Z","url":"/reference/front-matter/#statuses"},{"author":"None","category":"Front matter","content":"Sections can redirect to an external URL either in the same tab or a new one.\nThis can be done by setting the externalUrl in the site config like so:\nmenu: main: - identifier: external-link name: External Link url: / weight: 1 params: externalUrl: href: \u0026#34;https://www.anothersite.com\u0026#34; newTab: true - identifier: another-external-link name: Another External Link url: / weight: 2 params: externalUrl: href: \u0026#34;https://www.anothersite.com\u0026#34; newTab: false The newTab attribute is optional and defaults to true\n","id":"reference/front-matter/external-urls.md","originalContent":"\nSections can redirect to an external URL either in the same tab or a new one.\n\nThis can be done by setting the `externalUrl` in the `site config` like so:\n\n```yaml\nmenu:\n  main:\n    - identifier: external-link\n      name: External Link\n      url: /\n      weight: 1\n      params:\n        externalUrl:\n          href: \"https://www.anothersite.com\"\n          newTab: true\n    - identifier: another-external-link\n      name: Another External Link\n      url: /\n      weight: 2\n      params:\n        externalUrl:\n          href: \"https://www.anothersite.com\"\n          newTab: false \n```\n\nThe `newTab` attribute is optional and defaults to true\n","roles":["All Roles"],"scope":[],"section":"Reference","slug":"external-urls","title":"External URLs","updated":"2022-06-15T19:20:13.867157765Z","url":"/reference/front-matter/#external-urls"},{"author":"None","category":"Markdown","content":"Heading are indicated with a hash.\nHeading 1 # Heading 1 Heading 2 ## Heading 2 Heading 3 ### Heading 3 Use either bold, italics, or monospaced font styling for emphasis:\nItalicized text\n*Italicized text* Bold text\n**Bold text** Identifiers and code\n`Identifiers and code` ","id":"reference/markdown/headings-and-emphasis.md","originalContent":"\nHeading are indicated with a hash.\n\n# Heading 1\n\n```md\n# Heading 1\n```\n\n## Heading 2\n\n```md\n## Heading 2\n```\n\n### Heading 3\n```md\n### Heading 3\n```\n\nUse either bold, italics, or monospaced font styling for emphasis:\n\n*Italicized text*\n```md\n*Italicized text*\n```\n\n**Bold text**\n```md\n**Bold text**\n```\n\n`Identifiers and code`\n```md\n`Identifiers and code`\n```\n","roles":["All Roles"],"scope":[],"section":"Reference","slug":"headings-and-emphasis","title":"Headings \u0026 Emphasis","updated":"2022-06-15T19:20:13.871157946Z","url":"/reference/markdown/#headings-and-emphasis"},{"author":"None","category":"Markdown","content":"Markdown allows bullets and numbering to be nested.\nUse bullets to list unordered items.\nBullets Sentence 1. Sentence 2. Nested sentence 1. Nested sentence 2. Double nested sentence. * Sentence 1. * Sentence 2. - Nested sentence 1. - Nested sentence 2. + Double nested sentence. Numbering Use a numbered list for steps that should be done in order. You can number the list yourself or have Presidium do the numbering automatically:\nOne\nTwo\nThree\nFour\nFive\nSix\n1. One 1. Two 1. Three 4. Four 5. Five 6. Six ","id":"reference/markdown/bullets-and-numbering.md","originalContent":"\nMarkdown allows bullets and numbering to be nested.\n\nUse bullets to list unordered items.\n\n## Bullets\n\n* Sentence 1.\n* Sentence 2.\n    - Nested sentence 1.\n    - Nested sentence 2.\n        + Double nested sentence.\n\n```md\n* Sentence 1.\n* Sentence 2.\n    - Nested sentence 1.\n    - Nested sentence 2.\n        + Double nested sentence.\n```\n\n## Numbering\n\nUse a numbered list for steps that should be done in order. You can number the list yourself or have Presidium do the \nnumbering automatically:\n\n1. One\n1. Two\n1. Three\n\n4. Four\n5. Five\n6. Six\n\n```md\n1. One\n1. Two\n1. Three\n\n4. Four\n5. Five\n6. Six\n```\n","roles":["All Roles"],"scope":[],"section":"Reference","slug":"bullets-and-numbering","title":"Bullets \u0026 Numbering","updated":"2022-06-15T19:20:13.871157946Z","url":"/reference/markdown/#bullets-and-numbering"},{"author":"None","category":"Markdown","content":"You can link to internal articles in your repository, to external articles, or even to other semantically significant text. Any text enclosed in angle brackets will be interpreted as a link. If you want to add a description, use square brackets for the description and parenthesis for the link.\nInternal Page link: Presidium Authors Internal Anchor link: Presidium Authors External link: https://github.com/SPANDigital/presidium Alternative: Presidium on Github - Internal Page link: [Presidium Authors]({{\u0026lt; ref \u0026#34;reference/front-matter/authors.md\u0026#34; \u0026gt;}}) - Internal Anchor link: [Presidium Authors]({{\u0026lt; ref \u0026#34;reference/front-matter/#authors\u0026#34; \u0026gt;}}) - External link: \u0026lt;https://github.com/SPANDigital/presidium\u0026gt; - Alternative: [Presidium on Github](https://github.com/SPANDigital/presidium) ","id":"reference/markdown/links.md","originalContent":"\nYou can link to internal articles in your repository, to external articles, or even to other semantically significant \ntext. Any text enclosed in angle brackets will be interpreted as a link. If you want to add a description, \nuse square brackets for the description and parenthesis for the link.\n\n- Internal Page link: [Presidium Authors]({{\u003c ref \"reference/front-matter/authors.md\" \u003e}})\n- Internal Anchor link: [Presidium Authors]({{\u003c ref \"reference/front-matter/#authors\" \u003e}})\n- External link: \u003chttps://github.com/SPANDigital/presidium\u003e\n- Alternative: [Presidium on Github](https://github.com/SPANDigital/presidium)\n\n\n```md\n- Internal Page link: [Presidium Authors]({{\u003c/* ref \"reference/front-matter/authors.md\" */\u003e}})\n- Internal Anchor link: [Presidium Authors]({{\u003c/* ref \"reference/front-matter/#authors\" */\u003e}})\n- External link: \u003chttps://github.com/SPANDigital/presidium\u003e\n- Alternative: [Presidium on Github](https://github.com/SPANDigital/presidium)\n```\n","roles":["All Roles"],"scope":[],"section":"Reference","slug":"links","title":"Links","updated":"2022-06-15T19:20:13.871157946Z","url":"/reference/markdown/#links"},{"author":"None","category":"Markdown","content":"Markdown provides a simple syntax for creating tables using hyphens and horizontal bars / pipes.\nfirst heading second heading third heading row 1 column 1 row 1 column 2 row 1 column 3 row 2 column 1 row 2 column 2 row 2 column 3 row 3 column 1 row 3 column 2 row 3 column 3 row 4 column 1 row 4 column 2 row 4 column 3 | first heading | second heading | third heading | |----------------|----------------|----------------| | row 1 column 1 | row 1 column 2 | row 1 column 3 | | row 2 column 1 | row 2 column 2 | row 2 column 3 | | row 3 column 1 | row 3 column 2 | row 3 column 3 | | row 4 column 1 | row 4 column 2 | row 4 column 3 | ","id":"reference/markdown/tables.md","originalContent":"\nMarkdown provides a simple syntax for creating tables using hyphens and horizontal bars / pipes.\n\n| first heading  | second heading | third heading  |\n|----------------|----------------|----------------|\n| row 1 column 1 | row 1 column 2 | row 1 column 3 |\n| row 2 column 1 | row 2 column 2 | row 2 column 3 |\n| row 3 column 1 | row 3 column 2 | row 3 column 3 |\n| row 4 column 1 | row 4 column 2 | row 4 column 3 |\n\n\n```md\n| first heading  | second heading | third heading  |\n|----------------|----------------|----------------|\n| row 1 column 1 | row 1 column 2 | row 1 column 3 |\n| row 2 column 1 | row 2 column 2 | row 2 column 3 |\n| row 3 column 1 | row 3 column 2 | row 3 column 3 |\n| row 4 column 1 | row 4 column 2 | row 4 column 3 |\n```\n","roles":["All Roles"],"scope":[],"section":"Reference","slug":"tables","title":"Tables","updated":"2022-06-15T19:20:13.871157946Z","url":"/reference/markdown/#tables"},{"author":"None","category":"Markdown","content":"Unusual content can be included in blockquotes, which always begin with a closed angle bracket. In these examples, the Bootstrap Glyphicons have been used to embellish the text.\nThis is a blockquote\nList in blockquote Note! List in blockquote Other examples TODO http://my/url/ Decision: Example: IMPORTANT \u0026gt; **TODO** \u0026gt; \u0026lt;span class=\u0026#34;glyphicon glyphicon-list-alt\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026gt; \u0026lt;http://my/url/\u0026gt; \u0026gt; \u0026lt;span class=\u0026#34;glyphicon glyphicon-tags\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026gt; **Decision:** \u0026gt; \u0026lt;span class=\u0026#34;glyphicon glyphicon-knight\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026gt; **Example:** \u0026gt; \u0026lt;span class=\u0026#34;glyphicon glyphicon-flag\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026gt; **IMPORTANT** \u0026gt; \u0026lt;span class=\u0026#34;glyphicon glyphicon-exclamation-sign\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; ","id":"reference/markdown/blockquotes.md","originalContent":"\nUnusual content can be included in blockquotes, which always begin with a closed angle bracket. In these examples, \nthe [Bootstrap Glyphicons](http://glyphicons.bootstrapcheatsheets.com/) have been used to embellish the text.\n\n\u003e This is a blockquote\n\u003e - List in blockquote\n\n\u003e\u0026nbsp;**Note**!\n\u003e \u003cspan class=\"glyphicon glyphicon-pushpin\"\u003e\u003c/span\u003e\n\u003e - List in blockquote\n\n## Other examples\n\n\u003e \u0026nbsp;**TODO**\n\u003e \u003cspan class=\"glyphicon glyphicon-list-alt\"\u003e\u003c/span\u003e\n\n\u003e \u0026nbsp;\u003chttp://my/url/\u003e\n\u003e \u003cspan class=\"glyphicon glyphicon-tags\"\u003e\u003c/span\u003e\n\n\u003e \u0026nbsp;**Decision:**\n\u003e \u003cspan class=\"glyphicon glyphicon-knight\"\u003e\u003c/span\u003e\n\n\u003e \u0026nbsp;**Example:**\n\u003e \u003cspan class=\"glyphicon glyphicon-flag\"\u003e\u003c/span\u003e\n\n\u003e \u0026nbsp;**IMPORTANT**\n\u003e \u003cspan class=\"glyphicon glyphicon-exclamation-sign\"\u003e\u003c/span\u003e\n\n```md\n\u003e **TODO**\n\u003e \u003cspan class=\"glyphicon glyphicon-list-alt\"\u003e\u003c/span\u003e\n\n\u003e \u003chttp://my/url/\u003e\n\u003e \u003cspan class=\"glyphicon glyphicon-tags\"\u003e\u003c/span\u003e\n\n\u003e **Decision:**\n\u003e \u003cspan class=\"glyphicon glyphicon-knight\"\u003e\u003c/span\u003e\n\n\u003e **Example:**\n\u003e \u003cspan class=\"glyphicon glyphicon-flag\"\u003e\u003c/span\u003e\n\n\u003e **IMPORTANT**\n\u003e \u003cspan class=\"glyphicon glyphicon-exclamation-sign\"\u003e\u003c/span\u003e\n```\n","roles":["All Roles"],"scope":[],"section":"Reference","slug":"blockquotes","title":"Blockquotes","updated":"2022-06-15T19:20:13.871157946Z","url":"/reference/markdown/#blockquotes"},{"author":"None","category":"Markdown","content":"To add code blocks to your content, enclose the code with three backticks. For syntax highlighting, set the language directly after the first set of backticks. Alternatively, you can indent your code / machine output to treat it as preformatted text. For single line inline code, use a single backtick.\nJavascript var N = 32; var buffer = new ArrayBuffer(N); ```js var N = 32; var buffer = new ArrayBuffer(N); ``` Python my_array = [i for i in range(0, N)] ```py my_array = [i for i in range(0, N)] ``` C int * my_func(int * in) { return in; } ```c int * my_func(int * in) { return in; } ``` Go package main import \u0026#34;fmt\u0026#34; func main() { fmt.Println(\u0026#34;hello world\u0026#34;) } ```go package main import \u0026quot;fmt\u0026quot; func main() { fmt.Println(\u0026quot;hello world\u0026quot;) } ``` Others Github-flavoured Markdown supports many languages for code blocks. For a full list, go to Github.\n","id":"reference/markdown/code-blocks.md","originalContent":"\nTo add code blocks to your content, enclose the code with three backticks. For syntax highlighting, set the language \ndirectly after the first set of backticks. Alternatively, you can indent your code / machine output to treat it as \npreformatted text. For single line inline code, use a single backtick.\n\n## Javascript\n\n```js\nvar N = 32;\nvar buffer = new ArrayBuffer(N);\n```\n\n    ```js\n    var N = 32;\n    var buffer = new ArrayBuffer(N);\n    ```\n\n## Python\n\n```py\nmy_array = [i for i in range(0, N)]\n```\n\n    ```py\n    my_array = [i for i in range(0, N)]\n    ```\n\n## C\n\n```c\nint * my_func(int * in) {\n    return in;\n}\n```\n\n    ```c\n    int * my_func(int * in) {\n        return in;\n    }\n    ```\n\n## Go\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    fmt.Println(\"hello world\")\n}\n```\n\n    ```go\n    package main\n    \n    import \"fmt\"\n    \n    func main() {\n        fmt.Println(\"hello world\")\n    }\n    ```\n\n## Others\n\nGithub-flavoured Markdown supports many languages for code blocks. For a full list, go to [Github](https://github.com/github/linguist/blob/master/lib/linguist/languages.yml).\n","roles":["All Roles"],"scope":[],"section":"Reference","slug":"codeblocks","title":"Codeblocks","updated":"2022-06-15T19:20:13.871157946Z","url":"/reference/markdown/#codeblocks"},{"author":"None","category":"Markdown","content":"Image Links Put any images you want to include in the /static/images directory and reference them in the text. Note the exclamation point. The image path may be fully resolved:\n![Image Name](/images/logo.png) Image with attributes Sample image {{\u0026lt; img src=\u0026#34;/images/logo.png\u0026#34; caption=\u0026#34;Sample image\u0026#34; style=\u0026#34;width:25%;\u0026#34; \u0026gt;}} Captions To include a caption, add Caption after an image link. For example:\nSample Image With Caption\n![Sample Image With Caption](/images/logo.png) *Sample Image With Caption* ","id":"reference/markdown/images.md","originalContent":"\n## Image Links\n\nPut any images you want to include in the \u003cproject root\u003e/static/images directory and reference them in the text. \nNote the exclamation point. The image path may be fully resolved:\n\n![Image Name](/images/logo.png)\n\n```md\n![Image Name](/images/logo.png)\n```\n\n## Image with attributes\n\n{{\u003c img src=\"/images/logo.png\" caption=\"Sample image\" style=\"width:25%;\" \u003e}}\n\n```md\n{{\u003c/* img src=\"/images/logo.png\" caption=\"Sample image\" style=\"width:25%;\" */\u003e}}\n```\n\n### Captions\n\nTo include a caption, add *Caption* after an image link. For example:\n\n![Sample Image With Caption](/images/logo.png)\n*Sample Image With Caption*\n\n```md\n![Sample Image With Caption](/images/logo.png)\n*Sample Image With Caption*\n```\n","roles":["All Roles"],"scope":[],"section":"Reference","slug":"images","title":"Images","updated":"2022-06-15T19:20:13.871157946Z","url":"/reference/markdown/#images"},{"author":"None","category":"Markdown","content":"Tooltips display a short definition of an item. There are two ways to create tooltips:\nAutomatic from the Glossary Via Link Override Automatic Tooltips Automatic tooltips reference Glossary entries. If a Glossary article by the name of “Tooltips” exists, a tooltip will be available for the following item:\nTooltipsThis is an example of a Glossary entry linked to from here. {{\u0026lt; tooltip \u0026#34;Tooltips\u0026#34; \u0026gt;}}` Link Override You can use an internal article as the source of a tooltip. Presidium will use the first 100 words of the article to construct the tooltip, so you should make sure the text will work as a tooltip. Note that the text used for the demarcation of a tooltip does not need to match the article title, like this,Before you write any content, spend some time anticipating what tasks you need to perform and make … which links to an article on plan content development.\n{{\u0026lt; tooltip \u0026#34;this,\u0026#34; \u0026#34;best-practices/plan-content-development.md\u0026#34; \u0026gt;}} ","id":"reference/markdown/tooltips.md","originalContent":"\nTooltips display a short definition of an item. There are two ways to create tooltips:\n\n- Automatic from the Glossary\n- Via Link Override\n\n## Automatic Tooltips\n\nAutomatic tooltips reference Glossary entries. If a Glossary article by the name of “Tooltips” exists, a tooltip will \nbe available for the following item:\n\n{{\u003c tooltip \"Tooltips\" \u003e}}\n\n```md\n{{\u003c/* tooltip \"Tooltips\" */\u003e}}`\n```\n\n## Link Override\n\nYou can use an internal article as the source of a tooltip. Presidium will use the first 100 words of the article to \nconstruct the tooltip, so you should make sure the text will work as a tooltip. Note that the text used for the \ndemarcation of a tooltip does not need to match the article title, like \n{{\u003c tooltip \"this,\" \"best-practices/plan-content-development.md\" \u003e}} which links to an article on plan content \ndevelopment.\n\n```md\n{{\u003c/* tooltip \"this,\" \"best-practices/plan-content-development.md\" */\u003e}}\n```\n","roles":["All Roles"],"scope":[],"section":"Reference","slug":"tooltips","title":"Tooltips","updated":"2022-06-15T19:20:13.871157946Z","url":"/reference/markdown/#tooltips"},{"author":"None","category":"Importers","content":"The Reference section of Presidium should be reserved as a low-level reference for users. Typical components documented in the Reference section may include a client library or API specification. The process of importing documentation involves parsing a reference source and generating articles that are included in the generated site.\nWhere possible, reference documentation should be generated to ensure that your documentation is in sync with the system being documented.\nPresidium supports the following documentation sources:\nOpenAPI3 For other sources that do not yet have an importer, documentation can be embedded into references.\n","id":"reference/importers/reference-documentation.md","originalContent":"\nThe Reference section of Presidium should be reserved as a low-level reference for users.\nTypical components documented in the Reference section may include a client library or API specification.\nThe process of importing documentation involves parsing a reference source and generating articles that are included in the generated site.\n\n\u003eWhere possible, reference documentation should be generated to ensure that your documentation is in sync with the\nsystem being documented.\n\nPresidium supports the following documentation sources:\n- [OpenAPI3](#open-api3)\n\nFor other sources that do not yet have an importer, documentation can be [embedded](#embed) into references.\n","roles":["All Roles"],"scope":[],"section":"Reference","slug":"importing-documentation","title":"Importing Documentation","updated":"2022-06-15T19:20:13.871157946Z","url":"/reference/importers/#importing-documentation"},{"author":"None","category":"Importers","content":"Presidium includes a Golang tool (presidium-oapi3 for importing your OpenAPI 3 spec into Presidium documentation.\nAdd the presidium-oapi3 dependency to your site\u0026rsquo;s package.json or run npm install --save presidium-oapi3. Add a script that invokes the tool. Run npm run import-oapi whenever you need to update your API documentation. { \u0026#34;scripts\u0026#34; : { \u0026#34;import-oapi\u0026#34; : \u0026#34;presidium-oapi3\u0026#34; }, } Example:\n$ npm run import-oapi convert -f \u0026lt;YOUR_API_SPEC\u0026gt; -o \u0026lt;THE_OUTPUT_DIRECTORY\u0026gt; -r \u0026lt;THE_PRESIDIUM_REFERENCE_URL\u0026gt; The following options are available for presidium-oapi3:\nOption Description -n, --apiName string The name under which the generated docs will be grouped -f, --file string OpenAPI 3 spec file -o, --outputDir string The output directory -r, --referenceURL string The reference URL (default \u0026ldquo;reference\u0026rdquo;) -h, --help help for convert ","id":"reference/importers/oapi3.md","originalContent":"\nPresidium includes a Golang tool ([presidium-oapi3](https://www.npmjs.com/package/presidium-oapi-3) for importing your OpenAPI 3 spec into Presidium documentation.\n\n1. Add the [presidium-oapi3](https://www.npmjs.com/package/presidium-oapi-3) dependency to your site's `package.json` or run `npm install --save presidium-oapi3`.\n1. Add a script that invokes the tool.\n1. Run `npm run import-oapi` whenever you need to update your API documentation.\n\n```json\n{\n    \"scripts\" : {\n        \"import-oapi\" : \"presidium-oapi3\"\n    },\n}\n```\n\nExample:\n\n```sh\n$ npm run import-oapi convert -f \u003cYOUR_API_SPEC\u003e -o \u003cTHE_OUTPUT_DIRECTORY\u003e -r \u003cTHE_PRESIDIUM_REFERENCE_URL\u003e\n```\n\nThe following options are available for `presidium-oapi3`:\n\n| Option | Description\n|:-------|:---\n|  -n, \\--apiName `string`       | The name under which the generated docs will be grouped |\n|  -f, \\--file `string`         |  OpenAPI 3 spec file |\n|  -o, \\--outputDir `string`     | The output directory |\n|  -r, \\--referenceURL `string`  | The reference URL (default \"reference\")|\n|  -h, \\--help                 | help for convert |","roles":["All Roles"],"scope":[],"section":"Reference","slug":"open-api3","title":"OpenAPI3","updated":"2022-06-15T19:20:13.871157946Z","url":"/reference/importers/#open-api3"},{"author":"None","category":"Importers","content":"A fallback approach to importing generated documentation is to embed documentation in an iframe. This approach is not recommended because items are not indexed or available on the main menu. However, it will work for certain cases when an importer is not yet available.\nWhen possible, use a simple template when embedding documentation in an iframe.\nTo include documentation in an iframe:\nGenerate the static site documentation for your component. Put the documentation in the /static folder so that it\u0026rsquo;s statically served. The Presidium convention is to place it under /static/import/{my-reference}. Add a reference article to the Reference section: --- title: My Reference --- # foo.bar \u0026lt;div\u0026gt; \u0026lt;iframe\u0026gt; src=\u0026#39;/static/import/{my-reference}/foo/bar/package-summary.html\u0026#39; \u0026lt;/iframe\u0026gt; \u0026lt;/div\u0026gt; You can create multiple Markdown files for different components as required.\n","id":"reference/importers/embed.md","originalContent":"\nA fallback approach to importing generated documentation is to embed documentation in an iframe.\nThis approach is not recommended because items are not indexed or available on the main menu. However, it\nwill work for certain cases when an importer is not yet available.\n\n\u003e When possible, use a simple template when embedding documentation in an iframe.\n\nTo include documentation in an iframe:\n1. Generate the static site documentation for your component.\n1. Put the documentation in the `/static` folder so that it's statically served.\nThe Presidium convention is to place it under `/static/import/{my-reference}`.\n1. Add a reference article to the Reference section:\n\n```markdown\n\n---\ntitle: My Reference\n---\n\n# foo.bar\n\n\u003cdiv\u003e\n    \u003ciframe\u003e\n            src='{{% baseurl %}}/static/import/{my-reference}/foo/bar/package-summary.html'\n    \u003c/iframe\u003e\n\u003c/div\u003e\n```\n\n\u003eYou can create multiple Markdown files for different components as required.\n","roles":["All Roles"],"scope":[],"section":"Reference","slug":"embed","title":"Embed","updated":"2022-06-15T19:20:13.867157765Z","url":"/reference/importers/#embed"},{"author":"None","category":"Source Control","content":"Presidium content can be managed in various ways depending on your project needs. Content may be hosted in:\nA dedicated repo that only contains documentation A sub-folder of an existing repo A dedicated repo is simpler to configure and easier to manage independently. Managing content within in a sub directory inside the source code repo keeps everything in one place and makes it easier to update the documents while changing the code.\n","id":"recipes/source-control/approaches.md","originalContent":"\nPresidium content can be managed in various ways depending on your project needs. Content may be hosted in:\n\n- A dedicated repo that only contains documentation\n- A sub-folder of an existing repo\n\nA dedicated repo is simpler to configure and easier to manage independently. Managing content within in a sub directory \ninside the source code repo keeps everything in one place and makes it easier to update the documents while changing the\ncode.\n","roles":["All Roles"],"scope":[],"section":"Recipes","slug":"approaches","title":"Approaches","updated":"2022-06-15T19:20:13.867157765Z","url":"/recipes/source-control/#approaches"},{"author":"None","category":"Source Control","content":"Presidium can exist within a sub-folder of an existing source code repository, for example, /docs.\nGetting Presidium The easiest way to incorporate Presidium into your project is to run the wizard from your project root:\npresidium init And specify Project Name as docs, so that, Presidium creates and empty Presidium site under docs/ folder.\nThe contents of your docs/ folder should look something like this:\nconfig.yaml go.mod content/ static Add the following to your project’s .gitignore file:\ndocs/public From this point on, you can follow instructions in the Getting Started section. The only difference is that your documentation root is /docs.\n","id":"recipes/source-control/sub-folder.md","originalContent":"\nPresidium can exist within a sub-folder of an existing source code repository, for example, `/docs`.\n\n## Getting Presidium\n\nThe easiest way to incorporate Presidium into your project is to run the wizard from your project root:\n\n```shell\npresidium init\n```\n\nAnd specify `Project Name` as `docs`, so that, Presidium creates and empty Presidium site under `docs/` folder.\n\nThe contents of your `docs/` folder should look something like this:\n\n```\nconfig.yaml\ngo.mod\ncontent/\nstatic\n```\n\nAdd the following to your project’s .gitignore file:\n\n```\ndocs/public\n```\n\nFrom this point on, you can follow instructions in the Getting Started section. The only difference is that your \ndocumentation root is `/docs`.\n","roles":["All Roles"],"scope":[],"section":"Recipes","slug":"sub-folder","title":"Sub Folder","updated":"2022-06-15T19:20:13.867157765Z","url":"/recipes/source-control/#sub-folder"},{"author":"None","category":"Source Control","content":"If you want to store your documentation in a separate repository or share documentation between projects you can use submodules. Use the following steps to set up a submodule.\nCreate a new repository for you module. Create a config.yml file and add the following module: mounts: - source: content target: content Create a content directory and add your markdown files. E.g. ├── config.yml └── content └── glossary ├── _index.md └── link.md Commit and push your changes To use your submodule, add it to the imports section of your project\u0026rsquo;s config.yml file. E.g. module: imports: - path: \u0026lt;REPO_URL_OF_SUBMODULE\u0026gt; mounts: - source: content target: content ","id":"recipes/source-control/sub-module.md","originalContent":"\nIf you want to store your documentation in a separate repository or share documentation between projects you can use submodules. Use the following steps to set up a submodule.\n\n1. Create a new repository for you module. \n2. Create a `config.yml` file and add the following\n   ```yaml\n   module:\n     mounts:\n       - source: content\n         target: content\n   ```\n3. Create a `content` directory and add your markdown files. E.g.\n   ```\n   ├── config.yml\n   └── content\n       └── glossary\n           ├── _index.md\n           └── link.md\n\n   ```\n4. Commit and push your changes\n5. To use your submodule, add it to the `imports` section of your project's `config.yml` file. E.g.\n   ```yaml\n   module:\n     imports:\n     - path: \u003cREPO_URL_OF_SUBMODULE\u003e\n       mounts:\n       - source: content\n         target: content\n   ```\n","roles":["All Roles"],"scope":[],"section":"Recipes","slug":"sub-module","title":"Sub Module","updated":"2022-06-15T19:20:13.867157765Z","url":"/recipes/source-control/#sub-module"},{"author":"None","category":"Content Structure","content":"When you create a Presidium site using the CLI init command, Presidium creates the directory structure for the selected template.\nSections and articles are arranged using the weight key in the front matter of each file, and to specify section level title and ordering you may use the _index.md file inside the directory containing a section.\nThe following is an example of how you can order and organize files and directories:\n. ├── article-1.md // Specify weight 1 here in front matter ├── Directory-2 │ ├── article-2.1.md // Specify weight 1 here in front matter │ ├── article-2.2.md // Specify weight 2 here in front matter │ ├── _index.md // Specify weight 2 here in front matter, this will set `Directory-2` as the second item in the parent section ├── article-3.md // Specify weight 3 here in front matter ├── article-4.md // Specify weight 4 here in front matter └── _index.md // Specify weight 1 here in front matter Please note that for Directory-2/_index.md file we specify weight as 2, as in this case, this weight determines the ordering for the entire section with respect of its siblings (article-1.md, article-2.md, article-3.md, article-4.md)\n","id":"recipes/content-structure/directory-structure.md","originalContent":"When you create a Presidium site using the CLI `init` command, Presidium creates the directory structure for the \nselected template.\n\nSections and articles are arranged using the `weight` key in the `front matter` of each file, and to specify section\nlevel title and ordering you may use the `_index.md` file inside the directory containing a section.\n\nThe following is an example of how you can order and organize files and directories:\n\n```\n    .\n    ├── article-1.md // Specify weight 1 here in front matter\n    ├── Directory-2\n    │   ├── article-2.1.md // Specify weight 1 here in front matter\n    │   ├── article-2.2.md // Specify weight 2 here in front matter\n    │   ├── _index.md // Specify weight 2 here in front matter, this will set `Directory-2` as the second item in the parent section\n    ├── article-3.md // Specify weight 3 here in front matter\n    ├── article-4.md // Specify weight 4 here in front matter\n    └── _index.md // Specify weight 1 here in front matter\n```\n\nPlease note that for `Directory-2/_index.md` file we specify `weight` as `2`, as in this case, this weight \ndetermines the ordering for the entire section with respect of its siblings (`article-1.md`, `article-2.md`, `article-3.md`, `article-4.md`)\n","roles":["All Roles"],"scope":[],"section":"Recipes","slug":"directory-structure","title":"Directory Structure","updated":"2022-06-15T19:20:13.867157765Z","url":"/recipes/content-structure/#directory-structure"},{"author":"None","category":"Hosting","content":"GitHub Pages provides a quick and convenient means of hosting and serving your documentation from a Github repository. The recommended way to host your Presidium site in Github Pages is to use GitHub Actions\nIf you are using GitHub Actions for the first time you can simply create a push.yaml file under .github/workflows and define your GitHub Pages job, if you already using GitHub Actions, you can simply add a job to deploy your documentation and configure your baseURL accordingly:\nname: Presidium Github Pages on: - push jobs: gh-pages: runs-on: ubuntu-20.04 concurrency: group: ${{ github.workflow }}-${{ github.ref }} steps: - uses: actions/checkout@v2 with: submodules: true fetch-depth: 0 persist-credentials: false - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#39;0.87.0\u0026#39; extended: true - name: Build run: hugo --minify --baseURL `https://\u0026lt;ORGANIZATION\u0026gt;.github.io/\u0026lt;REPOSITORY_NAME\u0026gt;` - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_dir: ./public If your documentation site uses private repository modules, you need to change the git config in order to be able to fetch from private repositories:\n... steps: - uses: actions/checkout@v2 with: submodules: true fetch-depth: 0 persist-credentials: false - name: Inject Golang Git Config run: git config --global url.\u0026#34;https://${PRIVATE_GITHUB_TOKEN}:@github.com/\u0026#34;.insteadOf \u0026#34;https://github.com/\u0026#34; ... env: PRIVATE_GITHUB_TOKEN: ${{ secrets.PRIVATE_GITHUB_TOKEN }} GOPRIVATE: github.com/spandigital Note that we are using the environment variable PRIVATE_GITHUB_TOKEN which you need to create in your repository Settings \u0026gt; Secrets, containing a personal access token capable of downloading your private resources.\n","id":"recipes/hosting/github-pages.md","originalContent":"\n[GitHub Pages](https://pages.github.com/) provides a quick and convenient means of hosting and serving your \ndocumentation from a Github repository. The recommended way to host your Presidium site in Github Pages is to use\n[GitHub Actions](https://github.com/features/actions)\n\nIf you are using GitHub Actions for the first time you can simply create a `push.yaml` file under `.github/workflows`\nand define your GitHub Pages job, if you already using GitHub Actions, you can simply add a job to deploy your\ndocumentation and configure your `baseURL` accordingly:\n\n```yaml\nname: Presidium Github Pages\non:\n  - push\n\njobs:\n  gh-pages:\n    runs-on: ubuntu-20.04\n    concurrency:\n      group: ${{ github.workflow }}-${{ github.ref }}\n    steps:\n      - uses: actions/checkout@v2\n        with:\n          submodules: true\n          fetch-depth: 0\n          persist-credentials: false\n      - name: Setup Hugo\n        uses: peaceiris/actions-hugo@v2\n        with:\n          hugo-version: '0.87.0'\n          extended: true\n      - name: Build\n        run: hugo --minify --baseURL `https://\u003cORGANIZATION\u003e.github.io/\u003cREPOSITORY_NAME\u003e`\n      - name: Deploy\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          github_token: ${{ secrets.GITHUB_TOKEN }}\n          publish_dir: ./public\n```\n\nIf your documentation site uses private repository modules, you need to change the git config in order to be able to \nfetch from private repositories:\n\n```yaml\n    ...\n    steps:\n      - uses: actions/checkout@v2\n        with:\n          submodules: true\n          fetch-depth: 0\n          persist-credentials: false\n      - name: Inject Golang Git Config\n        run: git config --global url.\"https://${PRIVATE_GITHUB_TOKEN}:@github.com/\".insteadOf \"https://github.com/\"\n    ...\n    env:\n      PRIVATE_GITHUB_TOKEN: ${{ secrets.PRIVATE_GITHUB_TOKEN }}\n      GOPRIVATE: github.com/spandigital\n```\n\nNote that we are using the environment variable `PRIVATE_GITHUB_TOKEN` which you need to create in your repository\n`Settings` \u003e `Secrets`, containing a personal access token capable of downloading your private resources.\n","roles":["All Roles"],"scope":[],"section":"Recipes","slug":"github-pages","title":"Github Pages","updated":"2022-06-15T19:20:13.867157765Z","url":"/recipes/hosting/#github-pages"},{"author":"None","category":"Content Versioning","content":"The versioning tool allows the content creator keep up tp 5 versions of the content. These versions live under the project/versions folder. The tool always discards the oldest version number if the user request more than 5 versions. By default this tool is not enabled and only has to be enabled once.\nWorkflow Enable to versioning feature (once only):\npresidium versioning --enable Start the next version.\npresidium versioning next Update the last version.\npresidium versioning update To go back to any previous version, just copy the version back to the main /content folder\n","id":"tools/versioning.md","originalContent":"\nThe versioning tool allows the content creator keep up tp 5 versions of the content. These versions live under the `project/versions` folder.  The tool always discards the oldest version number if the user request more than 5 versions. By default this tool is not enabled and only has to be enabled once.\n\n## Workflow\n\n1. Enable to versioning feature ___(once only)___:\n\n   ```sh\n   presidium versioning --enable\n   ```\n\n2. Start the next version.\n\n   ```sh\n   presidium versioning next\n   ```\n\n3. Update the last version.\n\n   ```sh\n   presidium versioning update\n   ```\n\nTo go back to any previous version, just copy the version back to the main `/content` folder\n\n\n","roles":["All Roles"],"scope":[],"section":"Tools","slug":"content-versioning","title":"Content Versioning","updated":"2022-06-15T19:20:13.871157946Z","url":"/tools/#content-versioning"},{"author":"None","category":"Link Validation","content":"This tool reports links within a Presidium site. You can use this tool see which links are broken, points to non standard protocols.\nThe tool does not need a live Presidium site to work against, so the site does not need to be deployed.\nHow to use the tool Generate a local public site by running presidium hugo:\npresidium hugo Next run the tool pointing to the public site:\npresidium report pagelinks ./public Inspect the report For example:\npresidium validate ./public VALIDATION PATH: ./public total: 864 valid links: 864 broken: 0 external: 0 warnings: 0 Broken links, external and dynamic (and/or non standard) links will be reported in detail.\n","id":"tools/link-validation.md","originalContent":"This tool reports links within a Presidium site. You can use this tool see which links are broken, points to non standard protocols.\n\n\u003e The tool does not need a live Presidium site to work against, so the site does not need to be deployed.\n\n## How to use the tool\n\n1. Generate a local public site by running presidium hugo:\n\n   ```shell\n   presidium hugo\n   ```\n\n2. Next run the tool pointing to the `public` site:\n\n   ```shell\n   presidium report pagelinks ./public\n   ```\n\n## Inspect the report\n\nFor example:\n\n```shell\npresidium validate ./public\nVALIDATION PATH: ./public\n\n        total: 864\n  valid links: 864\n       broken: 0\n     external: 0\n     warnings: 0\n```\n\nBroken links, external and dynamic (and/or non standard) links will be reported in detail.","roles":["All Roles"],"scope":[],"section":"Tools","slug":"link-validation","title":"Link Validation","updated":"2022-06-15T19:20:13.871157946Z","url":"/tools/#link-validation"},{"author":"None","category":"Issues","content":"If you experience any issues with Presidium, please log an issue so that we can continue to improve the product.\n","id":"support/Issues.md","originalContent":"\nIf you experience any issues with Presidium, please [log an issue](https://github.com/SPANDigital/presidium/issues) so that we can continue to improve the product.","roles":["All Roles"],"scope":[],"section":"Support","slug":"issues","title":"Issues","updated":"2022-06-15T19:20:13.871157946Z","url":"/support/#issues"},{"author":"None","category":"v2.0.0","content":"26 May 2022\nSummary Replaced Jekyll with Hugo as our static site generator.\nNew Features Presidium CLI tool that allows you to scaffold new sites from a template. A new Presidium Hugo Theme that replaces the default Jekyll theme. ","id":"updates/v2.0.0.md","originalContent":"\n26 May 2022\n\n# Summary\n\nReplaced Jekyll with Hugo as our static site generator.\n\n# New Features\n\n- Presidium CLI tool that allows you to scaffold new sites from a template.\n- A new [Presidium Hugo Theme](https://github.com/SPANDigital/presidium-theme-website) that replaces the default Jekyll theme.","roles":["All Roles"],"scope":[],"section":"Updates","slug":"v200","title":"v2.0.0","updated":"2022-06-15T19:20:13.871157946Z","url":"/updates/#v200"},{"author":"None","category":"v0.1.42","content":"21 November 2018\nSummary General improvement that includes a small bug fix to the gh-pages command.\nBug Fixes/Enhancements 174 ","id":"updates/v0.1.42.md","originalContent":"\n21 November 2018\n\n## Summary\n\nGeneral improvement that includes a small bug fix to the `gh-pages` command.\n\n\n## Bug Fixes/Enhancements\n\n- [174](https://github.com/SPANDigital/presidium/issues/174)\n","roles":["All Roles"],"scope":[],"section":"Updates","slug":"v0142","title":"v0.1.42","updated":"2022-06-15T19:20:13.871157946Z","url":"/updates/#v0142"},{"author":"None","category":"v0.1.41","content":"20 November 2018\nSummary General improvements that include updates to the linking out of external sites.\nNew Features Sections that are External URLs have the option of linking out in a new or existing tab. Site Config If you intend to use this release, make sure your site config is up to date with the latest config.\nBug Fixes/Enhancements 172 ","id":"updates/v0.1.41.md","originalContent":"\n20 November 2018\n\n## Summary\n\nGeneral improvements that include updates to the linking out of external sites.\n\n## New Features\n\n- Sections that are [External URLs]({{% baseurl %}}/reference/front-matter/#external-urls) have the option of linking out in a new or existing tab.\n\n## Site Config\n\nIf you intend to use this release, make sure your site config is up to date with the [latest](https://github.com/SPANDigital/presidium-template/releases/tag/v0.1.39) config.\n\n## Bug Fixes/Enhancements\n\n- [172](https://github.com/SPANDigital/presidium/issues/172)\n","roles":["All Roles"],"scope":[],"section":"Updates","slug":"v0141","title":"v0.1.41","updated":"2022-06-15T19:20:13.871157946Z","url":"/updates/#v0141"},{"author":"None","category":"v0.1.39","content":"19 September 2018\nSummary General improvements that include a new feature to allow sections to be external URLs.\nNew Features Sections can now be External URLs Site Config If you intend to use this release, make sure your site config is up to date with the latest config.\nBug Fixes/Enhancements 172 ","id":"updates/v0.1.39.md","originalContent":"\n19 September 2018\n\n## Summary\n\nGeneral improvements that include a new feature to allow sections to be external URLs.\n\n## New Features\n\n- Sections can now be [External URLs]({{% baseurl %}}/reference/front-matter/#external-urls)\n\n## Site Config\n\nIf you intend to use this release, make sure your site config is up to date with the [latest](https://github.com/SPANDigital/presidium-template/releases/tag/v0.1.39) config.\n\n## Bug Fixes/Enhancements\n\n- [172](https://github.com/SPANDigital/presidium/issues/172)\n","roles":["All Roles"],"scope":[],"section":"Updates","slug":"v0139","title":"v0.1.39","updated":"2022-06-15T19:20:13.871157946Z","url":"/updates/#v0139"},{"author":"None","category":"v0.1.38","content":"19 September 2018\nSummary General improvements that include updates to the scope feature and new documentation content.\nNew Features Articles can now have multiple Scopes Corrections to the usage of Statuses in the site config Site Config If you intend to use this release, make sure your site config is up to date with the latest config.\nBug Fixes/Enhancements https://github.com/SPANDigital/presidium/issues/170 https://github.com/SPANDigital/presidium/issues/169 ","id":"updates/v0.1.38.md","originalContent":"\n19 September 2018\n\n## Summary\n\nGeneral improvements that include updates to the scope feature and new documentation content.\n\n## New Features\n\n- Articles can now have multiple [Scopes]({{% baseurl %}}/reference/frontmatter/scopes/)\n- Corrections to the usage of [Statuses]({{% baseurl %}}/reference/frontmatter/statuses/) in the `site config`\n\n## Site Config\n\nIf you intend to use this release, make sure your site config is up to date with the [latest](https://github.com/SPANDigital/presidium-template/releases/tag/v0.1.38) config.\n\n## Bug Fixes/Enhancements\n\n- https://github.com/SPANDigital/presidium/issues/170\n- https://github.com/SPANDigital/presidium/issues/169\n","roles":["All Roles"],"scope":[],"section":"Updates","slug":"v0138","title":"v0.1.38","updated":"2022-06-15T19:20:13.871157946Z","url":"/updates/#v0138"},{"author":"None","category":"v0.1.37","content":"14 September 2018\nSummary General improvements that include small bug fixes to Presidium and new documentation content.\nNew Features Introduced the ability to build internal and external facing documentation using scopes Optional cname parameter in the site config Site Config If you intend to use this release, make sure your site config is up to date with the latest config.\nBug Fixes/Enhancements Github Issues ","id":"updates/v0.1.37.md","originalContent":"\n14 September 2018\n\n## Summary\n\nGeneral improvements that include small bug fixes to Presidium and new documentation content.\n\n## New Features\n\n- Introduced the ability to build internal and external facing documentation using [scopes]({{% baseurl %}}/reference/front-matter/#scopes)\n- Optional `cname` parameter in the `site config`\n\n## Site Config\n\nIf you intend to use this release, make sure your site config is up to date with the [latest](https://github.com/SPANDigital/presidium-template/releases/tag/v0.1.37) config.\n\n## Bug Fixes/Enhancements\n\n- [Github Issues](https://github.com/SPANDigital/presidium/pulls?utf8=%E2%9C%93\u0026q=is%3Apr+is%3Amerged+)\n","roles":["All Roles"],"scope":[],"section":"Updates","slug":"v0137","title":"v0.1.37","updated":"2022-06-15T19:20:13.871157946Z","url":"/updates/#v0137"},{"author":"None","category":"v0.1.9","content":"4 July 2017\nSummary General improvements that include small bug fixes to Presidium and new documentation content.\nNew Content Markdown New Features Tooltips Landing Page presidium-swagger - A Java-based tool built on top of Swagger2Markup that imports your API\u0026rsquo;s Swagger into your documentation. Site Config If you intend to use this release, make sure your site config is up to date with the latest config.\nBug Fixes 39 50 ","id":"updates/v0.1.9.md","originalContent":"\n4 July 2017\n\n## Summary\n\nGeneral improvements that include small bug fixes to Presidium and new documentation content.\n\n## New Content\n\n- [Markdown]({{% baseurl %}}/reference/markdown/)\n\n## New Features\n\n- [Tooltips]({{% baseurl %}}/reference/markdown/#tooltips)\n- [Landing Page]({{% baseurl %}}/reference/#landing-page)\n- [presidium-swagger]({{% baseurl %}}/reference/#swagger) - A Java-based tool built on top of [Swagger2Markup](https://github.com/Swagger2Markup/swagger2markup) that imports your API's Swagger into your documentation.\n\n## Site Config\n\nIf you intend to use this release, make sure your site config is up to date with the [latest](https://github.com/SPANDigital/presidium-template/releases/tag/v0.1.9) config.\n\n## Bug Fixes\n\n- [39](https://github.com/SPANDigital/presidium/issues/39)\n- [50](https://github.com/SPANDigital/presidium/issues/50)\n","roles":["All Roles"],"scope":[],"section":"Updates","slug":"v019","title":"v0.1.9","updated":"2022-06-15T19:20:13.871157946Z","url":"/updates/#v019"},{"author":"None","category":"v0.1.8","content":"20 June 2017\nSummary General improvements include small bug fixes to Presidium and new documentation content.\nSite Config If you intend to use this release, make sure your site config is up to date with the latest config.\nNew Content Features Benefits Plan Content Development Design Documentation Structure Define Learning Objectives Inventory Existing Content Use Article Templates Writing Effective Articles Bug Fixes #44 #43 ","id":"updates/v0.1.8.md","originalContent":"\n20 June 2017\n\n## Summary\n\nGeneral improvements include small bug fixes to Presidium and new documentation content.\n\n## Site Config\n\nIf you intend to use this release, make sure your site config is up to date with the [latest](https://github.com/SPANDigital/presidium-template/releases/tag/v0.1.8) config.\n\n## New Content\n\n- [Features]({{% baseurl %}}/overview/)\n- [Benefits]({{% baseurl %}}/overview/)\n- [Plan Content Development]({{% baseurl %}}/best-practices/#plan-content-development)\n- [Design Documentation Structure]({{% baseurl %}}/best-practices/#design-documentation-structure)\n- [Define Learning Objectives]({{% baseurl %}}/best-practices/#define-learning-objectives)\n- [Inventory Existing Content]({{% baseurl %}}/best-practices/#inventory-existing-content)\n- [Use Article Templates]({{% baseurl %}}/best-practices/#use-article-templates)\n- [Writing Effective Articles]({{% baseurl %}}/best-practices/#writing-effective-articles)\n\n## Bug Fixes\n\n- [#44](https://github.com/SPANDigital/presidium/issues/44)\n- [#43](https://github.com/SPANDigital/presidium/issues/43)\n","roles":["All Roles"],"scope":[],"section":"Updates","slug":"v018","title":"v0.1.8","updated":"2022-06-15T19:20:13.871157946Z","url":"/updates/#v018"},{"author":"None","category":"v0.1.7","content":"13 June 2017\nSummary General improvements and features that include support for Jsdoc ingestion and minor bug fixes.\nNew Features Jsdoc Import: A node tool that imports Javascript comments into your documentation. Bug Fixes #5 ","id":"updates/v0.1.7.md","originalContent":"\n13 June 2017\n\n## Summary\n\nGeneral improvements and features that include support for Jsdoc ingestion and minor bug fixes.\n\n## New Features\n\n- [Jsdoc Import](/reference/importers/#jsdoc): A node tool that imports Javascript comments into your documentation.\n\n## Bug Fixes\n\n- [#5](https://github.com/SPANDigital/presidium/issues/5)\n","roles":["All Roles"],"scope":[],"section":"Updates","slug":"v017","title":"v0.1.7","updated":"2022-06-15T19:20:13.871157946Z","url":"/updates/#v017"},{"author":"None","category":"v0.1.6","content":"6 June 2017\nSummary General improvements and features that include support for semantic versioning, Javadoc ingestion, and link validation.\nNew Features Semantic Versioning: Adds support to publish and switch between different site versions Javadoc Import: Java doclet to import source code comments to Presidium Link validation: Tool to check for any broken links ","id":"updates/v0.1.6.md","originalContent":"\n6 June 2017\n\n## Summary\n\nGeneral improvements and features that include support for semantic versioning, Javadoc ingestion, and link validation.\n\n## New Features\n\n- [Semantic Versioning](/recipes/versioning/): Adds support to publish and switch between different site versions\n- [Javadoc Import](/reference/importers/#jsdoc): Java doclet to import source code comments to Presidium\n- [Link validation](/tools/#link-validation): Tool to check for any broken links\n","roles":["All Roles"],"scope":[],"section":"Updates","slug":"v016","title":"v0.1.6","updated":"2022-06-15T19:20:13.871157946Z","url":"/updates/#v016"},{"author":"None","category":"License","content":"Presidium was created by SPAN Digital\nCopyright 2022 SPAN Digital Licensed under the Apache License, Version 2.0 (the \u0026#34;License\u0026#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at [http://www.apache.org/licenses/LICENSE-2.0] Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \u0026#34;AS IS\u0026#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. ","id":"updates/license.md","originalContent":"\nPresidium was created by [SPAN Digital](http://www.spandigital.com)\n\n```\nCopyright 2022 SPAN Digital\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n[http://www.apache.org/licenses/LICENSE-2.0]\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n","roles":["All Roles"],"scope":[],"section":"Updates","slug":"license","title":"License","updated":"2022-06-15T19:20:13.871157946Z","url":"/updates/#license"},{"author":"None","category":"Tooltips","content":"This is an example of a Glossary entry linked to from here.\n","id":"glossary/tooltip.md","originalContent":"\nThis is an example of a Glossary entry linked to from [here]({{\u003c ref \"/reference/markdown/tooltips.md\" \u003e}}).\n","roles":["All Roles"],"scope":[],"section":"Glossary","slug":"tooltips","title":"Tooltips","updated":"2022-06-15T19:20:13.867157765Z","url":"/glossary/#tooltips"}]